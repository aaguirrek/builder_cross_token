{"version":3,"file":"js/479-legacy.86fbbf31.js","mappings":"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","sources":["webpack://quant-ux/./src/help/HelpButton.vue","webpack://quant-ux/src/help/HelpButton.vue","webpack://quant-ux/./src/help/HelpButton.vue?05ea","webpack://quant-ux/./src/help/HelpButton.vue?f665","webpack://quant-ux/./src/page/DropDownSelect.vue","webpack://quant-ux/src/page/DropDownSelect.vue","webpack://quant-ux/./src/page/DropDownSelect.vue?4042","webpack://quant-ux/./src/page/DropDownSelect.vue?4f5b","webpack://quant-ux/./src/views/apps/analytics/DistributionSection.vue","webpack://quant-ux/./src/views/apps/analytics/ScatterPlot.vue","webpack://quant-ux/./src/views/apps/analytics/ScatterPlotDetails.vue","webpack://quant-ux/src/views/apps/analytics/ScatterPlotDetails.vue","webpack://quant-ux/./src/views/apps/analytics/ScatterPlotDetails.vue?cebb","webpack://quant-ux/./src/views/apps/analytics/ScatterPlotDetails.vue?f7b3","webpack://quant-ux/src/views/apps/analytics/ScatterPlot.vue","webpack://quant-ux/./src/views/apps/analytics/ScatterPlot.vue?f0c7","webpack://quant-ux/./src/views/apps/analytics/ScatterPlot.vue?72ba","webpack://quant-ux/src/views/apps/analytics/DistributionSection.vue","webpack://quant-ux/./src/views/apps/analytics/DistributionSection.vue?5d33","webpack://quant-ux/./src/views/apps/analytics/DistributionSection.vue?96ff","webpack://quant-ux/./src/views/apps/analytics/TaskCreateDialog.vue","webpack://quant-ux/src/views/apps/analytics/TaskCreateDialog.vue","webpack://quant-ux/./src/views/apps/analytics/TaskCreateDialog.vue?b07b","webpack://quant-ux/./src/views/apps/analytics/TaskCreateDialog.vue?d390","webpack://quant-ux/./src/views/apps/analytics/TaskPerfGram.vue","webpack://quant-ux/src/views/apps/analytics/TaskPerfGram.vue","webpack://quant-ux/./src/views/apps/analytics/TaskPerfGram.vue?5dba","webpack://quant-ux/./src/views/apps/analytics/TaskPerfGram.vue?a254","webpack://quant-ux/./src/views/apps/test/TestSettings.vue","webpack://quant-ux/src/views/apps/test/TestSettings.vue","webpack://quant-ux/./src/views/apps/test/TestSettings.vue?096e","webpack://quant-ux/./src/views/apps/test/TestSettings.vue?722c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('span',{class:[{'MatcHelpIcon': !_vm.hasToolbar}, {'MatcToolbarItem MatcNotification': _vm.hasToolbar}],on:{\"click\":_vm.open}},[_c('div',{attrs:{\"type\":\"button\"}},[_c('QIcon',{attrs:{\"icon\":\"Help\"}}),(_vm.newNotifications)?_c('span',{staticClass:\"MatcNotificationBubble\"},[_vm._v(_vm._s(_vm.newNotifications))]):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template>\n    <span :class=\"[{'MatcHelpIcon': !hasToolbar}, {'MatcToolbarItem MatcNotification': hasToolbar}]\" @click=\"open\">\n        <div type=\"button\"> \n            <QIcon icon=\"Help\" />        \n            <span v-if=\"newNotifications\" class=\"MatcNotificationBubble\">{{newNotifications}}</span>\n        </div>\n        \n    </span>\n</template>\n<script>\nimport Dialog from 'common/Dialog'\nimport DomBuilder from 'common/DomBuilder'\nimport Help from 'help/Help'\nimport DojoWidget from 'dojo/DojoWidget'\nimport Services from 'services/Services'\nimport QIcon from 'page/QIcon'\n\nexport default {\n    name: 'HelpButton',\n    mixins:[DojoWidget],\n    props: ['topic', 'subtopic', 'hasNotifications', 'hasToolbar'],\n    data: function () {\n        return {\n            newNotifications: 0\n        }\n    },\n    components: {QIcon},\n    methods: {\n        show(topic, subtopic) {\n           \n            let dialog = new Dialog()\n\n            var db = new DomBuilder();\n\t\t\tvar popup = db.div(\"MatcDialog MatcHelpDialog MatcPadding\").build();\n            \t\n            dialog.popup(popup, this.$el);\n            setTimeout(() => {\n                let help = this.$new(Help, {hasNotifications: false})\n                help.placeAt(popup)\n                help.setTopic(topic)\n                help.setSupTopic(subtopic, true)\n            }, 300)\n        },\n        open () {\n            if (this.hasToolbar) {\n                Services.getUserService().setLastNotication()\n                this.newNotifications = 0\n            }\n            let dialog = new Dialog()\n\n            var db = new DomBuilder();\n\t\t\tvar popup = db.div(\"MatcDialog MatcHelpDialog MatcPadding\").build();\n            \t\n            dialog.popup(popup, this.$el);\n            setTimeout(() => {\n                let help = this.$new(Help, {hasNotifications: this.hasNotifications})\n                help.placeAt(popup)\n                if (this.topic) {\n                    help.setTopic(this.topic)\n                    help.setSupTopic(this.subtopic, true)\n                }\n            }, 300)\n            \n        },\n        async initNotification () {\n            let result = await Services.getUserService().getLastNotication()\n            if (result) {\n                let lastNoticationView = result.lastNotification\n                let newNotifications = 0\n                let notifications = await Services.getUserService().getNotications()\n                for (var i=0; i < notifications.length; i++ ){\n                    var notification = notifications[i];\n                    if (notification.lastUpdate > lastNoticationView){\n                        newNotifications++;\n                    }\n                }\n                this.newNotifications = newNotifications\n            }\n        }\n    }, \n    mounted () {\n        if (this.hasNotifications) {\n            this.initNotification()\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HelpButton.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HelpButton.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./HelpButton.vue?vue&type=template&id=444eeddf\"\nimport script from \"./HelpButton.vue?vue&type=script&lang=js\"\nexport * from \"./HelpButton.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"MatcButton MatcDropDownButton MatcDropDownSelect\"},[_c('div',{ref:\"button\",staticClass:\"MatcDropDownButtonCntr\",attrs:{\"type\":\"button\"}},[(_vm.icon)?_c('QIcon',{attrs:{\"icon\":_vm.icon}}):_vm._e(),_c('label',{staticClass:\"MatcDropDownLabel\",attrs:{\"data-dojo-attach-point\":\"label\"}}),_c('span',{staticClass:\"caret\"})],1),_vm._m(0)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"MatcDropDownPopUp\",attrs:{\"role\":\"menu\",\"data-dojo-attach-point\":\"popup\"}},[_c('ul',{attrs:{\"role\":\"menu\",\"data-dojo-attach-point\":\"ul\"}})])\n}]\n\nexport { render, staticRenderFns }","\n<template>\n    <div class=\"MatcButton MatcDropDownButton MatcDropDownSelect\">\n        <div type=\"button\" ref=\"button\" class=\"MatcDropDownButtonCntr\">\n            <QIcon :icon=\"icon\" v-if=\"icon\"/>\n            <label data-dojo-attach-point=\"label\" class=\"MatcDropDownLabel\"></label>\n            <span class=\"caret\"></span>\n        </div>\n        <div class=\"MatcDropDownPopUp \" role=\"menu\" data-dojo-attach-point=\"popup\" >\n            <ul class role=\"menu\" data-dojo-attach-point=\"ul\"></ul>\n        </div>\n    </div>\n</template>\n<script>\nimport DropDownButton from \"common/DropDownButton\";\nimport CheckBox from \"common/CheckBox\";\nimport lang from \"dojo/_base/lang\";\nimport css from \"dojo/css\";\nimport on from \"dojo/on\";\nimport touch from \"dojo/touch\";\n  \n  export default {\n    name: \"DropDownSelect\",\n    mixins: [DropDownButton],\n    data: function() {\n      return {\n        icon: '',\n        openCSS: \"MatcDropDownButtonOpen\",\n        iconCSS: \"MatcDropDownIcon\",\n        labelCSS: \"MatcDropDownLabel\",\n        selectedCSS: \"MatcDropDownButtonSelected\",\n        liCSS: \"MatcDropDownMenuItem\",\n        updateLabel: false,\n        selected: {}\n      };\n    },\n    methods:{\n        renderOptions (list) {\n   \n            for (let i = 0; i < list.length; i++) {\n                const o = list[i];\n                const li = document.createElement(\"li\");\n                css.add(li, this.liCSS)\n                if (o.check) {\n                    const checkCntr = document.createElement(\"span\");\n                    css.add(checkCntr, 'MatcDropDownSelectCheck');\n                    li.appendChild(checkCntr)\n\n                    const check = this.$new(CheckBox)\n                    check.setValue(o.selected)\n                    check.setLabel(o.label)\n                    check.placeAt(checkCntr)\n                \n                    check.on('change', lang.hitch(this, \"onSelect\", o))\n                    this._lis[o.value] = li;\n\n                    this.selected[o.value] = o.selected\n\n                } else if (o.label || o.icon) {\n                    this.hasObjects = true;\n                    if (o.icon) {\n                        const icon = document.createElement(\"span\");\n                        css.add(icon, this.iconCSS);\n                        css.add(icon, o.icon);\n                        li.appendChild(icon);\n                    }\n                    if (o.label) {\n                        const lbl = document.createElement(\"label\");\n                        css.add(lbl, this.labelCSS);\n                        lbl.innerHTML = o.label;\n                        li.appendChild(lbl);\n                    }\n                  \n                    this.own(on(li, touch.press, lang.hitch(this, \"onClick\", o)));\n                    this._lis[o.value] = li;\n                }\n             \n                if (o.css) {\n                    css.add(li, o.css)\n                }\n                this.ul.appendChild(li);\n            }\n        },\n        onSelect (option, selected) {\n            if (option.callback) {\n                option.callback(selected)\n                return\n            }\n            this.selected[option.value] = selected\n            this.$emit('select', this.selected)\n        },\n        onClick (option, e) {\n            if (option.event) {\n                this.$emit(option.event, e)\n            }\n           \n        }\n    },\n    watch:{\n    }\n  };\n  </script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DropDownSelect.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DropDownSelect.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DropDownSelect.vue?vue&type=template&id=7a8915dd\"\nimport script from \"./DropDownSelect.vue?vue&type=script&lang=js\"\nexport * from \"./DropDownSelect.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"MatcDistributionSection\"},[_c('div',{staticClass:\"level\"},[_c('div',{staticClass:\"level-left\"},[_c('h3',{staticClass:\"title level-item\"},[_c('span',[_vm._v(_vm._s(_vm.$t('analytics.distribution.title')))]),_c('HelpButton',{attrs:{\"topic\":\"analytics.dist\",\"hasNotifications\":false}})],1)]),_c('div',{staticClass:\"level-right level-options\"},[(_vm.hasConfig)?_c('CheckBox',{attrs:{\"value\":false,\"label\":\"zScore\"},on:{\"change\":_vm.onChangeNorm}}):_vm._e(),(_vm.hasConfig)?_c('DropDownButton',{attrs:{\"value\":_vm.clusterAlgo,\"options\":_vm.clusterAlgoOptions},on:{\"change\":_vm.onChangeAlgo}}):_vm._e(),(_vm.hasConfig)?_c('DropDownSelect',{ref:\"dropDown\",attrs:{\"options\":_vm.clusterOptions,\"l\":_vm.$t('analytics.distribution.cluster-vars')},on:{\"select\":_vm.onChangeCluster,\"algo\":_vm.onChangeAlgo}}):_vm._e()],1)]),_c('div',{staticClass:\"MatcSurveySectionTableCntr\"},[(_vm.events && _vm.events.length > 0)?[(_vm.viewMode === 'Scatter')?_c('ScatterPlot',{attrs:{\"yAxis\":_vm.yAxis,\"xAxis\":_vm.xAxis,\"app\":_vm.app,\"pub\":_vm.pub,\"clusterVars\":_vm.clusterVars,\"clusterAlgo\":_vm.clusterAlgo,\"clusterNorm\":_vm.clusterNorm,\"events\":_vm.events,\"annotation\":_vm.annotation,\"test\":_vm.test}}):_vm._e()]:_c('span',{staticClass:\"MatcHint\"},[_vm._v(\" \"+_vm._s(_vm.$t('analytics.distribution.no-data'))+\" \")])],2)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:'MatcScatterPlot MatcScatterPlot' + _vm.mode},[_c('div',{staticClass:\"MatcScatterPlotfActionCntr\",attrs:{\"data-dojo-attach-point\":\"actionCntr\"}}),_c('div',{staticClass:\"MatcScatterPlotCntr\",attrs:{\"data-dojo-attach-point\":\"cntr\"},on:{\"click\":_vm.onBackgroundClick}},[_c('span',{staticClass:\"MatxAxisXLine MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden\",attrs:{\"data-dojo-attach-point\":\"xLine\"}}),_c('span',{staticClass:\"MatxAxisYLine MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden\",attrs:{\"data-dojo-attach-point\":\"yLine\"}}),_c('div',{staticClass:\"MatcScatterPlotCanvas\",attrs:{\"data-dojo-attach-point\":\"canvas\"}}),_c('span',{staticClass:\"MatxAxisLabel xMaxLabel\",attrs:{\"data-dojo-attach-point\":\"xMaxLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel MatcScatterPlotDropOffHidden yMaxLabel\",attrs:{\"data-dojo-attach-point\":\"yMaxLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden xMiddleLabel\",attrs:{\"data-dojo-attach-point\":\"xMiddleLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden yMiddleLabel\",attrs:{\"data-dojo-attach-point\":\"yMiddleLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel minLabel\",attrs:{\"data-dojo-attach-point\":\"minLabel\"}},[_vm._v(\"0\")]),_c('span',{staticClass:\"MatxAxisLabel xLabel\",attrs:{\"data-dojo-attach-point\":\"xLabel\"}},[_vm._v(\"X\")]),_c('span',{staticClass:\"MatxAxisLabel yLabel MatcScatterPlotDropOffHidden\",attrs:{\"data-dojo-attach-point\":\"yLabel\"}},[_vm._v(\"Y\")]),_c('span',{staticClass:\"MatxAxisLabel yLabelEast MatcScatterPlotfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"yLabelEast\"}},[_vm._v(\"Y\")]),_c('span',{staticClass:\"MatxAxisLabel yMinLabelEast MatcScatterPlotfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"yMinLabelEast\"}},[_vm._v(\"0\")]),_c('span',{staticClass:\"MatxAxisLabel yMaxLabelEast MatcScatterPlotfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"yMaxLabelEast\"}},[_vm._v(\"100\")]),_c('span',{staticClass:\"MatxAxisLabel yMinLabel\",attrs:{\"data-dojo-attach-point\":\"yMinLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel bottom25Label MatcScatterPlotfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"bottom25Label\"}}),_c('span',{staticClass:\"MatxAxisLabel bottom75Label MatcScatterPlotfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"bottom75Label\"}}),_c('span',{staticClass:\"MatxAxisLabel MatxAxisLabelCntr\",attrs:{\"data-dojo-attach-point\":\"xAxisLabelCntr\"}}),_c('div',{staticClass:\"MatcScatterPlotfTaskCntr\",attrs:{\"data-dojo-attach-point\":\"taskCntr\"}},[_c('div',{class:{'MatcScatterPlotfTaskSelected': _vm.hasOutliers},on:{\"click\":function($event){return _vm.toggleOutlier()}}},[_c('span',{style:(_vm.getOutlierStyle())}),_c('label',[_vm._v(\" \"+_vm._s(_vm.getNLS(\"analytics.distribution.outlier\")))])])]),(_vm.hoverDetails)?_c('ScatterPlotDetails',{attrs:{\"value\":_vm.hoverDetails}}):_vm._e()],1),_c('div',{staticClass:\"MatcScatterPlotHintBar\",attrs:{\"data-dojo-attach-point\":\"hintCntr\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:'MatcScatterPlotDetails ' + _vm.value.cls,style:('bottom: ' + _vm.value.y +'%; left:' + _vm.value.x +'%')},[_c('span',{staticClass:\"MatcScatterPlotDetailsArrow\"}),_c('div',{staticClass:\"MatcScatterPlotDetailsContainer\"},[_c('table',[_c('tr',[_c('td',[_vm._v(\" \"+_vm._s(_vm.getNLS(\"analytics.distribution.details.duration\"))+\": \")]),_c('td',[_vm._v(\" \"+_vm._s(Math.round(_vm.value.s.duration / 1000))+\" s \")])]),_c('tr',[_c('td',[_vm._v(\" \"+_vm._s(_vm.getNLS(\"analytics.distribution.details.interactions\"))+\": \")]),_c('td',[_vm._v(\" \"+_vm._s(_vm.value.s.interactions)+\" \")])]),_c('tr',[_c('td',[_vm._v(\" \"+_vm._s(_vm.getNLS(\"analytics.distribution.details.screens\"))+\" : \")]),_c('td',[_vm._v(\" \"+_vm._s(_vm.value.s.screenUnique)+\" / \"+_vm._s(_vm.value.s.screenLoads)+\" \")])]),_c('tr',[_c('td',[_vm._v(\" \"+_vm._s(_vm.getNLS(\"analytics.distribution.details.weirdness\"))+\" : \")]),_c('td',[_vm._v(\" \"+_vm._s(Math.round(_vm.value.s.weirdness * 100))+\" \")])]),_c('tr',[_c('td',[_vm._v(\" \"+_vm._s(_vm.getNLS(\"analytics.distribution.details.tasks\"))+\": \")]),_c('td',[_c('div',{staticClass:\"MatcScatterPlotDetailsTaskCntr\"},_vm._l((_vm.value.tasks),function(t){return _c('span',{key:t,staticClass:\"MatcScatterPlotDetailsTask\"},[_vm._v(\" \"+_vm._s(t)+\" \")])}),0)])])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template>\n\n\n            <div :class=\"'MatcScatterPlotDetails ' + value.cls\" :style=\"'bottom: ' + value.y +'%; left:' + value.x +'%'\">\n                <span class=\"MatcScatterPlotDetailsArrow\"></span>\n                <div class=\"MatcScatterPlotDetailsContainer\">\n                    <table>\n                        <tr>\n                            <td>\n                                {{getNLS(\"analytics.distribution.details.duration\")}}:\n                            </td>\n                            <td>\n                                {{Math.round(value.s.duration / 1000)}} s\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {{getNLS(\"analytics.distribution.details.interactions\")}}:\n                            </td>\n                            <td>\n                                {{value.s.interactions}}\n                            </td>\n                        </tr>\n                        <!-- <tr>\n                            <td>\n                                {{getNLS(\"analytics.distribution.details.errors\")}}:\n                            </td>\n                            <td>\n                                {{value.s.errors}}\n                            </td>\n                        </tr> -->\n                     \n                        <tr>\n                            <td>\n                                {{getNLS(\"analytics.distribution.details.screens\")}} :\n                            </td>\n                            <td>\n                                {{value.s.screenUnique}} / {{value.s.screenLoads}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {{getNLS(\"analytics.distribution.details.weirdness\")}} :\n                            </td>\n                            <td>\n                                {{Math.round(value.s.weirdness * 100)}}\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                {{getNLS(\"analytics.distribution.details.tasks\")}}:\n                            </td>\n                            <td>\n                                <div class=\"MatcScatterPlotDetailsTaskCntr\">\n                                    <span v-for=\"t in value.tasks\" :key=\"t\" class=\"MatcScatterPlotDetailsTask\">\n                                        {{t}}\n                                    </span>\n                                </div>\n                            </td>\n                        </tr>\n                       \n                    </table>\n\n                \n                </div>\n            </div>\n</template>\n\n<style lang=\"scss\">\n    @import '../../../style/components/scatter.scss';\n</style>\n\n<script>\nimport DojoWidget from \"dojo/DojoWidget\";\nexport default {\n    name: 'ScatterPlotDetails',\n    mixins: [DojoWidget],\n    props: ['value'],\n    data: function () {\n        return {\n        }\n    },\n    components: {\n\n    },\n    methods: {\n    },\n    watch: {\n    },\n    mounted() {        \n    }\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScatterPlotDetails.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScatterPlotDetails.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ScatterPlotDetails.vue?vue&type=template&id=8dd90e3a\"\nimport script from \"./ScatterPlotDetails.vue?vue&type=script&lang=js\"\nexport * from \"./ScatterPlotDetails.vue?vue&type=script&lang=js\"\nimport style0 from \"./ScatterPlotDetails.vue?vue&type=style&index=0&id=8dd90e3a&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n<template>\n    <div :class=\"'MatcScatterPlot MatcScatterPlot' + mode  \">\n       \n        <div class=\"MatcScatterPlotfActionCntr\" data-dojo-attach-point=\"actionCntr\">\n        </div>\n        <div class=\"MatcScatterPlotCntr\" data-dojo-attach-point=\"cntr\" @click=\"onBackgroundClick\">\n            <span class=\"MatxAxisXLine MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden\" data-dojo-attach-point=\"xLine\"></span>\n            <span class=\"MatxAxisYLine MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden\" data-dojo-attach-point=\"yLine\"></span>\n           \n            <div class=\"MatcScatterPlotCanvas\" data-dojo-attach-point=\"canvas\">\n            </div>\n\n            <span class=\"MatxAxisLabel xMaxLabel\" data-dojo-attach-point=\"xMaxLabel\"></span>\n            <span class=\"MatxAxisLabel MatcScatterPlotDropOffHidden yMaxLabel\" data-dojo-attach-point=\"yMaxLabel\"></span>\n            <span class=\"MatxAxisLabel MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden xMiddleLabel\" data-dojo-attach-point=\"xMiddleLabel\"></span>\n            <span class=\"MatxAxisLabel MatcScatterPlotfScatternVisible MatcScatterPlotDurationHidden yMiddleLabel\" data-dojo-attach-point=\"yMiddleLabel\"></span>\n            <span class=\"MatxAxisLabel minLabel\" data-dojo-attach-point=\"minLabel\">0</span>\n            <span class=\"MatxAxisLabel xLabel \" data-dojo-attach-point=\"xLabel\">X</span>\n            <span class=\"MatxAxisLabel yLabel MatcScatterPlotDropOffHidden\" data-dojo-attach-point=\"yLabel\">Y</span>\n            <span class=\"MatxAxisLabel yLabelEast MatcScatterPlotfDetailsVisible\" data-dojo-attach-point=\"yLabelEast\">Y</span>\n            <span class=\"MatxAxisLabel yMinLabelEast MatcScatterPlotfDetailsVisible\" data-dojo-attach-point=\"yMinLabelEast\">0</span>\n            <span class=\"MatxAxisLabel yMaxLabelEast MatcScatterPlotfDetailsVisible\" data-dojo-attach-point=\"yMaxLabelEast\">100</span>\n            <span class=\"MatxAxisLabel yMinLabel\" data-dojo-attach-point=\"yMinLabel\"></span>\n            <span class=\"MatxAxisLabel bottom25Label MatcScatterPlotfDetailsVisible\" data-dojo-attach-point=\"bottom25Label\"></span>\n            <span class=\"MatxAxisLabel bottom75Label MatcScatterPlotfDetailsVisible\" data-dojo-attach-point=\"bottom75Label\"></span>\n            <span class=\"MatxAxisLabel MatxAxisLabelCntr\" data-dojo-attach-point=\"xAxisLabelCntr\"></span>\n\n            <div class=\"MatcScatterPlotfTaskCntr\" data-dojo-attach-point=\"taskCntr\">\n                <div @click=\"toggleOutlier()\" :class=\"{'MatcScatterPlotfTaskSelected': hasOutliers}\">\n                    <span :style=\"getOutlierStyle()\"></span>\n                    <label> {{getNLS(\"analytics.distribution.outlier\")}}</label>\n                </div> \n                <!-- <div @click=\"clickTask()\" v-if=\"Object.values(selectedTasks).length\">\n                    <span></span>\n                    <label> {{getNLS(\"dash.perf.scatter.no-task\")}}</label>\n                </div> -->\n                <!-- <div v-for=\"task in tasks\" :key=\"task.id\" @click=\"clickTask(task)\">\n                    <span :style=\"getTaskStyle(task)\"></span>\n                    <label>{{task.name}}</label>\n                </div> -->\n            </div>\n\n\n            <ScatterPlotDetails v-if=\"hoverDetails\" :value=\"hoverDetails\"/>\n\n\n        </div>\n\n        <div class=\"MatcScatterPlotHintBar\" data-dojo-attach-point=\"hintCntr\">\n        </div>\n\n    </div>\n</template>\n\n<style lang=\"scss\">\n    @import '../../../style/components/scatter.scss';\n</style>\n\n<script>\nimport on from 'dojo/on'\nimport lang from 'dojo/_base/lang'\nimport css from 'dojo/css'\nimport Logger from 'common/Logger'\nimport _Color from 'common/_Color'\nimport DomBuilder from 'common/DomBuilder'\nimport Util from 'core/Util'\nimport Analytics from 'dash/Analytics'\nimport DataFrame from 'common/DataFrame'\nimport ScatterPlotDetails from './ScatterPlotDetails'\nimport * as Outlier from 'dash/Outlier'\nimport PerformanceMonitor from 'core/PerformanceMonitor'\nimport {iconDOM} from 'page/QIconUtil'\n\nexport default {\n    name: 'ScatterPlot',\n    mixins: [_Color, Util],\n    props: ['test', 'app', 'events', 'annotation', 'pub', 'mode', 'yAxis', 'xAxis', 'clusterVars', 'clusterAlgo', 'clusterNorm'],\n    data: function () {\n        return {\n            tasks: [],\n            selectedTasks: {},\n            hasOutliers: true,\n            paddingFactor: 1.1,\n            dialog: false,\n            includeDropOff: false,\n            defaultColor: \"#365fff\",\n            outlierColor: '#f83a3a',\n            clusters: [],\n            colors: [ \"#9933cc\", \"#669900\", \"#ff8a00\", \"#cc0000\", \"#000000\", \"#8ad5f0\", \"#d6adeb\", \"#c5e26d\"],\n            bins: 3,\n            hoverDetails: null,\n        }\n    },\n    components: {\n        ScatterPlotDetails\n    },\n    methods: {\n\n        getOutlierStyle () {\n            if (this.hasOutliers) {\n                return `background:${this.outlierColor}; border:none`\n            }\n            return ''\n        },\n\n        getTaskStyle (task) {      \n            if (this.selectedTasks[task.id]) {\n                return `background:${task.color}; border:none`\n            }\n            return ''\n        },\n\n        postCreate() {\n            this.init();\n            this._scatterPoints = {}\n        },\n\n        init() {\n            this.db = new DomBuilder();      \n            this._scatterPoints = {};\n        },\n\n        setValue(test, app, events, annotations) {\n            this.logger.log(-1, \"setValue\", \"enter\");\n            PerformanceMonitor.start('ScatterPlot.setValue()')\n            this.annotations = annotations;\n            this.model = app\n\n            try {\n                const filteredEvents = this.filterEvents(events, annotations);\n                this.df = this.getActionEvents(new DataFrame(filteredEvents));      \n                this.df.sortBy(\"time\");\n        \n                this.tasks = lang.clone(test.tasks).filter(task => task.flow.length >= 2);  \n\n                this.sessionDetails = this.analytics.getSessionDetails(this.df, this.tasks)     \n                this.sessionDetails = Outlier.addWeirdness(this.sessionDetails, this.df) \n                let data = this.analytics.convertSessionDetails(this.sessionDetails)\n\n                if (data.length < 200) {\n                    this.clusters = Outlier.cluster(data, this.clusterVars, this.clusterNorm, this.clusterAlgo)\n                } else {\n                    this.logger.error(\"setValue\", \"Too many events\");\n                    this.hasOutliers = false\n                }\n             \n                this.render();\n            } catch (e) {\n                this.logger.error(\"setValue\", \"Error\");\n                this.logger.sendError(e);\n            }\n            PerformanceMonitor.end('ScatterPlot.setValue()')\n        },\n\n        clickTask(task) {\n            this.selectTask(task);\n            this.render();\n            this.$forceUpdate()\n        },\n\n        toggleOutlier () {\n            this.hasOutliers = !this.hasOutliers\n            this.render();\n            this.$forceUpdate()\n        },\n\n        selectTask(task) {\n            this.selectedTasks[task?.id] = !this.selectedTasks[task?.id];\n            for (let id in this.selectedTasks) {\n                if (id !== task?.id) {\n                    this.selectedTasks[id] = false\n                }\n            }\n        },\n\n        render() {\n            this.logger.log(-1, \"render\", \"enter > \");\n            this.cleanUpTempListener()    \n            this.onBackgroundClick()       \n            this.render_Scatter();\n        },\n\n      \n        onBackgroundClick () {\n            this.setHint(this.db.span(\"\", this.getNLS(\"analytics.distribution.hint\")).build());\n            this.unSelectPoint()\n        },\n\n        render_Scatter() {\n            this.logger.log(1, \"render_Scatter\", \"enter\", this.mode);\n\n            delete this._selectedScatterPoint;           \n         \n            this.xLabel.innerHTML = this.getNLS(\"analytics.distribution.details.\" + this.xAxis);\n            this.yLabel.innerHTML = this.getNLS(\"analytics.distribution.details.\" + this.yAxis);\n            this.minLabel.innerHTML = \"0 s\"\n            this.yMinLabel.innerHTML = \"0\"    \n            this.render_Scatter_Points(this.xAxis, this.yAxis)            \n\n        },\n\n        render_Scatter_Points (xAxis, yAxis) {\n            this.logger.log(1, \"render_Scatter_Points\", \"enter > \" + xAxis + \" X \" + yAxis );\n\n  \n            const sessionSummaryDF = this.sessionDetails\n                  \n            const maxXAxis = Math.max(1, Math.ceil(sessionSummaryDF.max(xAxis) * this.paddingFactor));\n            const maxYAxis = Math.max(1, Math.ceil(sessionSummaryDF.max(yAxis) * this.paddingFactor));\n            const meanXAxis = sessionSummaryDF.mean(xAxis);\n            const meanYAxis = sessionSummaryDF.mean(yAxis);\n\n        \n            this.xMaxLabel.innerHTML = Math.ceil(maxXAxis / 1000) + \" s\";\n            this.yMaxLabel.innerHTML = Math.ceil(maxYAxis);\n     \n            const sessions = sessionSummaryDF.data;\n                      \n            for (let i = 0; i < sessions.length; i++) {\n                const s = sessions[i]        \n                const x = s[xAxis]\n                const y = s[yAxis]            \n                this.renderScatterPoint(i,s, x, y, maxXAxis, maxYAxis)               \n            }\n                \n            this.maxYAxis = maxYAxis;\n            this.maxXAxis = maxXAxis;\n            this.meanYAxis = meanYAxis\n            this.meanXAxis = meanXAxis\n\n            this.unSelectPoint()\n        },\n\n        renderScatterPoint(i, s, x, y , maxXAxis, maxYAxis) {\n            const key = s.session;\n            const ms = Math.min(i * 10, 300);\n\n            if (!this._scatterPoints[key]) {\n                const p = this.db.span(\"MatxScatterPoint\").build(this.canvas);\n                p.style.bottom = \"-5%\";\n                p.style.left = (((x / maxXAxis) * 100)) + \"%\";\n                this._scatterPoints[key] = p;\n            }\n\n            const color = this.getPointColor(s, i)\n            const p = this._scatterPoints[key];\n            p.style.background = color\n            this.tempOwn(on(p, \"click\", lang.hitch(this, \"selectPoint\", p, s, x, y, i))); \n            this.tempOwn(on(p, \"mouseover\", lang.hitch(this, \"hoverPoint\", p, s, x, y, i)));\n            this.tempOwn(on(p, \"mouseout\", lang.hitch(this, \"leavePoint\")));   \n            setTimeout(lang.hitch(this, \"animateScatterPoint\", p, x,y, maxXAxis, maxYAxis), ms);\n        },\n\n        animateScatterPoint(p, x, y, maxXAxis, maxYAxis) {\n            p.style.bottom = (((y / maxYAxis) * 100)) + \"%\";\n            p.style.left = (((x / maxXAxis) * 100)) + \"%\";\n        },\n\n        unSelectPoint() {\n            setTimeout(lang.hitch(this, \"setMiddle\", this.meanYAxis, this.maxYAxis, this.meanXAxis, this.maxXAxis), 200);\n        },\n\n        getPointColor (session, i) {       \n            if (this.clusters[i] === -1 && this.hasOutliers) {\n                return this.outlierColor\n            }\n            for (let taskID in this.selectedTasks) {      \n                if (this.selectedTasks[taskID] && session[taskID] && session[taskID].success) {\n                    return this.taskColors[taskID];\n                }          \n            }\n            return this.defaultColor\n        },\n\n        hoverPoint (p, s, x, y) {\n            let posX = x * 100 / this.maxXAxis\n            let posY = y * 100 / this.maxYAxis\n            let cls = ''\n            if (posX > 50) {\n                cls += 'left '\n            } else {\n                cls += 'right '\n            }\n            if (posY > 50) {\n                cls += 'bottom '\n            } else {\n                cls += 'top '\n            }\n            const tasks = []\n            this.tasks.forEach(t => {\n                if (s[t.id]?.success === 1) {\n                    tasks.push(t.name)\n                }\n            })\n            this.hoverDetails = {\n                x: posX,\n                y: posY,\n                cls: cls,\n                s: s,\n                tasks: tasks\n            }\n        },\n\n        leavePoint () {\n            this.hoverDetails = null\n        },\n\n        selectPoint(p, s, x, y, i, e) { \n            this.stopEvent(e);\n            this.setXMiddle(x, this.maxXAxis);\n            this.setYMiddle(y, this.maxYAxis);\n            css.add(this.cntr, \"MatcScatterPlotCntrHover\");\n            this._selectedScatterPoint = p;\n            this.showSessionReplayHint(s.session)\n        },\n\n        showSessionReplayHint(id) {\n            if (this.model) {\n                let url = \"#/apps/\" + this.model.id + \"/replay/\" + id + \".html\";\n                if (this.mode == \"public\") {\n                    url = \"#/examples/\" + this.model.id + \"/replay/\" + id + \".html\";\n                }\n                const hint = this.db.span(\"\").build();\n\t\t\t\tthis.db.span(\"\", this.getNLS(\"analytics.distribution.play\")).build(hint);\n\t\t\t\tconst a = this.db.a(\"\", this.getNLS(\"analytics.distribution.here\")).build(hint);\n                a.href = url\n                a.target = \"_matcSessionReplay\" + id\n                this.setHint(hint);\n            }\n        },\n\n        /*********************************************************************\n         * Helper\n         *********************************************************************/\n\n\n        setHint(hintNode) {\n            this.hintCntr.innerHTML = \"\";\n            if (hintNode) {\n                this.hintCntr.appendChild(iconDOM('PlayVideo'))\n                this.hintCntr.appendChild(hintNode);\n            }\n        },\n\n        clearPoint() {\n            //this.setMiddle(meanYAxis, maxYAxis, meanXAxis, maxXAxis);\n            css.remove(this.cntr, \"MatcScatterPlotCntrHover\");\n        },\n\n        setMiddle(meanYAxis, maxYAxis, meanXAxis, maxXAxis) {\n            this.setXMiddle(meanXAxis, maxXAxis);\n            this.setYMiddle(meanYAxis, maxYAxis);\n            css.remove(this.cntr, \"MatcScatterPlotCntrHover\");\n        },\n\n        setYMiddle(count, maxYAxis) {\n            this.yMiddleLabel.innerHTML = Math.ceil(count);\n            this.yMiddleLabel.style.bottom = ((count / maxYAxis) * 100) + \"%\";\n            this.yLine.style.bottom = ((count / maxYAxis) * 100) + \"%\";\n        },\n\n        setXMiddle(duration, maxXAxis) {\n            this.xMiddleLabel.innerHTML = Math.ceil(duration / 1000) + \" s\";\n            this.xMiddleLabel.style.left = (((duration / maxXAxis) * 100)) + \"%\";\n            this.xLine.style.left = (((duration / maxXAxis) * 100)) + \"%\";\n        }\n    },\n    watch: {\n        mode (v) {\n            this.mode = v\n            this.render();\n        },\n        yAxis (v) {\n            this.yAxis = v\n            this.render()\n        },\n        xAxis (v) {\n            this.xAxis = v\n            this.render()\n        },\n        clusterVars (v) {\n            this.clusterVars = v\n            this.setValue(this.test, this.app, this.events, this.annotation)\n        },\n        clusterAlgo (v) {\n            this.clusterAlgo = v\n            this.setValue(this.test, this.app, this.events, this.annotation)\n        },\n        clusterNorm (v) {\n            this.clusterNorm = v\n            this.setValue(this.test, this.app, this.events, this.annotation)\n        }\n    },\n    mounted() {        \n        this.analytics = new Analytics();\n        this.logger = new Logger(\"ScatterPlot\");\n        this.db = new DomBuilder();\n        this.setValue(this.test, this.app, this.events, this.annotation)\n    }\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ScatterPlot.vue?vue&type=template&id=de87b426\"\nimport script from \"./ScatterPlot.vue?vue&type=script&lang=js\"\nexport * from \"./ScatterPlot.vue?vue&type=script&lang=js\"\nimport style0 from \"./ScatterPlot.vue?vue&type=style&index=0&id=de87b426&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n<template>\n    <div class=\"MatcDistributionSection\">\n        <div class=\"level\">\n        <div class=\"level-left\">\n          <h3 class=\"title level-item\">\n            <span >{{$t('analytics.distribution.title')}}</span>\n            <HelpButton\n              topic=\"analytics.dist\"\n              :hasNotifications=\"false\"\n            />\n          </h3>\n        </div>\n        <div class=\"level-right level-options\">\n\n          <CheckBox @change=\"onChangeNorm\" :value=\"false\" label=\"zScore\" v-if=\"hasConfig\"/>\n\n          <DropDownButton @change=\"onChangeAlgo\" :value=\"clusterAlgo\" :options=\"clusterAlgoOptions\" v-if=\"hasConfig\"/>\n\n          <DropDownSelect\n            v-if=\"hasConfig\"\n            ref=\"dropDown\"\n            :options=\"clusterOptions\" \n            :l=\"$t('analytics.distribution.cluster-vars')\" \n            @select=\"onChangeCluster\" \n            @algo=\"onChangeAlgo\"\n           />\n        \n    \n        </div>\n      </div>\n  \n          <div class=\"MatcSurveySectionTableCntr\">\n\n            <template v-if=\"events && events.length > 0\">\n      \n              <ScatterPlot \n                  v-if=\"viewMode === 'Scatter'\" \n                  :yAxis=\"yAxis\"\n                  :xAxis=\"xAxis\"\n                  :app=\"app\"\n                  :pub=\"pub\"\n                  :clusterVars=\"clusterVars\"\n                  :clusterAlgo=\"clusterAlgo\"\n                  :clusterNorm=\"clusterNorm\"\n                  :events=\"events\"\n                  :annotation=\"annotation\"\n                  :test=\"test\"/>\n<!-- \n              <OutlierPlot \n                  v-if=\"viewMode === 'Outlier'\" \n                  @selected=\"showSelection\"\n                  :mode=\"viewMode\"\n                  :app=\"app\"\n                  :pub=\"pub\"\n                  :events=\"events\"\n                  :annotation=\"annotation\"\n                  :test=\"test\"/>\n\n              <DistributionTable            \n                v-if=\"viewMode === 'Details'\"\n                :mode=\"viewMode\"\n                :app=\"app\"\n                :pub=\"pub\"\n                :events=\"events\"\n                :annotation=\"annotation\"\n                :test=\"test\" /> -->\n              \n              </template>\n      \n      \n            <span class=\"MatcHint\" v-else>\n              {{$t('analytics.distribution.no-data')}}\n            </span>\n          </div>\n     \n      </div>\n  </template>\n  <style lang=\"scss\">\n      //@import '../../../style/survey_section.scss';\n\n      .MatcDistributionSection .MatcDropDownButtonWidth{\n        min-width: auto;\n        color: #3787f2;\n      }\n\n      .MatcDistributionSection .MatcDropDownButtonWidth:hover{\n        min-width: auto;\n        color: #fff;\n      }\n  </style>\n  <script>\n  import Logger from 'common/Logger'\n  import DropDownButton from 'page/DropDownButton'\n  import CheckBox from 'common/CheckBox'\n  import DropDownSelect from 'page/DropDownSelect'\n  import HelpButton from \"help/HelpButton\";\n  import ScatterPlot from './ScatterPlot'\n  \n  export default {\n      name: 'DistributionSection',\n      mixins:[],\n      props: ['test', 'app', 'events', 'annotation', 'pub'],\n      data: function () {\n          return {\n            xAxis: 'duration',\n            yAxis: 'interactions',\n            hasOutlier: false,\n            hasConfig: false,\n            isLoaded: false,\n            scatterMode: 'duration,interactions',\n            viewMode: 'Scatter',\n            viewOptions:[\n              {value:'Scatter', label: this.$t('analytics.distribution.viewScatter'), event:'scatter'},\n              {value:'Details', label: this.$t('analytics.distribution.viewDetails'), event:'outlier'},\n              {value:'Outlier', label: this.$t('analytics.distribution.viewOutlier'), event:'outlier'}\n            ],\n            selection: [],\n            cols: [\n              {key: \"interactions\", label: \"Interactions\"},\n              {key: \"duration\", label: \"Duration\"},\n              {key: \"screens\", label: \"Test Coverage\"},\n              {key: \"tasks\", label: \"Tasks\"},\n              {key: \"outlierRaw\", label: \"Outlier Raw\"},\n              {key: \"outlierUmap\", label: \"Outlier Umap\"},\n            ],\n            clusterAlgoOptions: [\n                {value: 'optics', label: 'Optics'},\n                {value: 'dbscan', label: 'DBScan'},\n                {value: 'lof', label:' LOF'}\n            ],\n            clusterOptions: [\n                {value: 'duration', label: this.$t('analytics.distribution.details.duration'), check:true,  selected: true},\n                {value: 'interactions', label: this.$t('analytics.distribution.details.interactions'), check:true, selected: true},\n                {value: 'screenLoads', label: this.$t('analytics.distribution.details.screenLoads'), check:true, selected: true},\n                {value: 'screenRatio', label: this.$t('analytics.distribution.details.screenRatio'), check:true, selected: false},\n                \n                {value: 'tasks', label: this.$t('analytics.distribution.details.tasks'), check:true, selected: true},\n                {value: 'weirdness', label: this.$t('analytics.distribution.details.weirdness'), check:true, selected: false},\n                //{value: 'errors', label: this.$t('analytics.distribution.details.errors'), check:true, selected: false}\n            ],\n            clusterAlgo: 'optics', //dbscan\n            clusterNorm: 'minmax', //zScore\n            clusterVars : [\"interactions\", \"duration\", \"screenLoads\", \"tasks\"]\n          }\n      },\n      components: {\n        'HelpButton': HelpButton,\n        'DropDownSelect': DropDownSelect,\n        'DropDownButton': DropDownButton,\n        'ScatterPlot': ScatterPlot,\n        'CheckBox': CheckBox,\n        // 'OutlierPlot':() => import(/* webpackChunkName: \"outlier\" */ './OutlierPlot'),\n        // 'DistributionTable': import(/* webpackChunkName: \"outlier\" */'./DistributionTable.vue'),\n      },\n      computed: {\n       \n      },\n      methods: {\n        onChangeNorm (d) {\n          this.clusterNorm = d ? 'zScore' : 'minmax'\n        },\n        onChangeAlgo (a) {\n          this.clusterAlgo = a\n        },\n        onChangeCluster (d) {\n          let clusterVars = []\n          Object.keys(d).forEach(key => {\n            const selected = d[key]\n            if (selected) {\n              clusterVars.push(key)\n            }\n          })\n          this.clusterVars = clusterVars\n        },\n        setScatterMode (m) {\n          if (m) {\n            let parts = m.split(',')\n            this.xAxis = parts[0]\n            this.yAxis = parts[1]\n          } \n          this.scatterMode = m\n        },\n        setViewMode (m) {\n          this.viewMode = m\n          this.selection = []\n        },\n        showSelection (selection) {\n          this.selection = selection\n        }\n      },\n      mounted () {\n        this.logger = new Logger('DistributionSection')\n        //this.hasConfig = location.href.indexOf('localhost') >= 0\n        this.isLoaded = true       \n      }\n  }\n  </script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DistributionSection.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DistributionSection.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DistributionSection.vue?vue&type=template&id=2408bd36\"\nimport script from \"./DistributionSection.vue?vue&type=script&lang=js\"\nexport * from \"./DistributionSection.vue?vue&type=script&lang=js\"\nimport style0 from \"./DistributionSection.vue?vue&type=style&index=0&id=2408bd36&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:'MatcDialog TaskCreateDialog ' + _vm.model.type},[_c('div',{staticClass:\"TaskCreateDialogCntr\"},[_c('div',{staticClass:\"FormCntr\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(\"Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.name),expression:\"task.name\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Name\"},domProps:{\"value\":(_vm.task.name)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.task, \"name\", $event.target.value)}}})]),_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(\"Description\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.task.description),expression:\"task.description\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"An explaination for the users\"},domProps:{\"value\":(_vm.task.description)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.task, \"description\", $event.target.value)}}})]),_c('div',[_c('label',[_vm._v(\"Expected Steps\")]),_c('p',{staticClass:\"MatcHint mb-16\"},[_vm._v(\"Click in the simulator to add steps. You can remove steps that are not needed by clicking on them.\")]),_c('div',{staticClass:\"StepCntr form-group\"},_vm._l((_vm.steps),function(step,i){return _c('div',{key:i,staticClass:\"Step\"},[(i > 0)?_c('span',{staticClass:\"mdi mdi-arrow-right\"}):_vm._e(),_c('div',{staticClass:\"StepDetails\"},[_vm._v(\" \"+_vm._s(step.type)+\" - \"+_vm._s(step.label)+\" \"),_c('div',{staticClass:\"removePopup\",on:{\"click\":function($event){return _vm.removeEvent(i)}}},[_c('span',{staticClass:\"mdi\"},[_vm._v(\"Remove\")])])])])}),0),_c('div',{staticClass:\"form-group\"},[_c('CheckBox',{attrs:{\"label\":\"Strict matching. No events between are allowed.\",\"value\":_vm.task.strict},on:{\"change\":_vm.setStrict}})],1),_c('div',{staticClass:\"form-group\"},[_c('CheckBox',{attrs:{\"label\":\"Record only screen views\",\"value\":_vm.recordOnlyScreenViews},on:{\"change\":_vm.setRecordOnlyScreenView}})],1)])]),_c('div',{ref:\"simCntr\",staticClass:\"SimCntr\"},[_c('div',{ref:\"wrapper\",staticClass:\"SimWrapper\"}),(_vm.abScreens && _vm.abScreens.length > 0)?_c('div',{staticClass:\"ABSelector\"},[_c('p',{staticClass:\"MatcHint\"},[_vm._v(\" Select the next screen to show \")]),_vm._l((_vm.abScreens),function(box){return _c('div',{key:box.id,staticClass:\"MatcButton\",on:{\"click\":function($event){return _vm.selectABLine(box)}}},[_vm._v(\" \"+_vm._s(box.name)+\" \")])})],2):_vm._e()])]),_c('div',{staticClass:\"MatcButtonBar\"},[_c('a',{staticClass:\"MatcButton MatcButtonPrimary\",on:{\"click\":_vm.onSave}},[_vm._v(\"Save\")]),_c('a',{staticClass:\"MatcLinkButton\",on:{\"click\":_vm.onCancel}},[_vm._v(\"Cancel\")])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template>\n  <div :class=\"'MatcDialog TaskCreateDialog ' + model.type\">\n    <div class=\"TaskCreateDialogCntr\">\n      <div class=\"FormCntr\" >\n\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input  v-model=\"task.name\" type=\"text\" class=\"form-control\" placeholder=\"Name\"  />\n          </div>\n\n          <div class=\"form-group\">\n            <label>Description</label>\n            <textarea  v-model=\"task.description\" type=\"text\" class=\"form-control\"  placeholder=\"An explaination for the users\"  />\n          </div>\n\n\n\n          <div>\n            <label>Expected Steps</label>\n            <p class=\"MatcHint mb-16\">Click in the simulator to add steps. You can remove steps that are not needed by clicking on them.</p>\n            <div class=\"StepCntr form-group\">\n              <div v-for=\"(step, i) in steps\" :key=\"i\" class=\"Step\">\n                <span class=\"mdi mdi-arrow-right\" v-if=\"i > 0\"/>\n                <div class=\"StepDetails\">\n                    {{step.type}} -\n                    {{step.label}}\n                    <div class=\"removePopup\" @click=\"removeEvent(i)\">\n                      <span class=\"mdi\">Remove</span>\n                    </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n               <CheckBox label=\"Strict matching. No events between are allowed.\" :value=\"task.strict\"  @change=\"setStrict\"/>\n            </div>\n            <div class=\"form-group\">\n              <CheckBox label=\"Record only screen views\" :value=\"recordOnlyScreenViews\"  @change=\"setRecordOnlyScreenView\"/>\n            </div>\n          </div>\n\n      </div>\n\n      <div class=\"SimCntr\" ref=\"simCntr\">\n\n        <div class=\"SimWrapper\" ref=\"wrapper\">\n\n        </div>\n\n        <div v-if=\"abScreens && abScreens.length > 0\" class=\"ABSelector\">\n          <p class=\"MatcHint\">\n            Select the next screen to show\n          </p>\n          <div v-for=\"box in abScreens\" :key=\"box.id\" class=\"MatcButton\" @click=\"selectABLine(box)\">\n            {{box.name}}\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n\n    <div class=\"MatcButtonBar\">\n      <a class=\"MatcButton MatcButtonPrimary\" @click=\"onSave\">Save</a>\n      <a class=\"MatcLinkButton\" @click=\"onCancel\" >Cancel</a>\n    </div>\n\n  </div>\n</template>\n<style lang=\"scss\">\n  @import '../../../style/components/task_create_dialog.scss';\n</style>\n<script>\nimport DojoWidget from \"dojo/DojoWidget\";\nimport lang from \"dojo/_base/lang\";\nimport on from \"dojo/on\";\nimport Logger from \"common/Logger\";\nimport CheckBox from \"common/CheckBox\";\nimport Simulator from \"core/Simulator\";\nimport Util from \"core/Util\";\nimport domGeom from \"dojo/domGeom\";\n\nexport default {\n  name: \"TaskCreateDialog\",\n  props: ['model'],\n  mixins: [Util, DojoWidget],\n  data: function() {\n    return {\n      hash: 'NoHashTaskCreate',\n      recordOnlyScreenViews: true,\n      abScreens: null,\n      ignoreFirstEvent: false,\n      task: {\n        name: '',\n        description: '',\n        flow:[]\n      },\n      ignoredEvents: [\n        \"SessionStart\",\n        \"ScreenAnimation\",\n        \"Animation\",\n        \"OverlayRemoveAnimation\",\n        \"OverlayShowAnimation\",\n        \"MouseOut\",\n        \"MouseOver\",\n        \"WidgetInit\",\n        \"ValidationOK\"\n      ]\n    };\n  },\n  components: {\n    'CheckBox': CheckBox\n  },\n  computed: {\n    steps () {\n      return this.task.flow.map(event => {\n        return {\n          screen: this.getScreenName(event.screen),\n          widget: this.getWidgetName(event.widget),\n          type:  this.getEventLabelWithState(event),\n          label: event.widget ? this.getWidgetName(event.widget) + ' @ ' + this.getScreenName(event.screen): this.getScreenName(event.screen)\n        }\n      })\n    }\n  },\n  methods: {\n\n    getEventLabelWithState (event) {\n      if (event.state && (event.type === 'WidgetClick' || event.type === 'WidgetChange')) {\n        return this.getEventStateLabel(event.state)\n      }\n      return this.getEventLabel(event.type)\n    },\n\n    setRecordOnlyScreenView (v) {\n      this.recordOnlyScreenViews = v\n    },\n\n    postCreate () {\n      this.logger = new Logger(\"TaskCreateDialog\");\n      this.logger.log(-1, \"postCreate\", \"enter > \" + this.appID + \"> \" + this.hash);\n      setTimeout(() => {\n        this.createSimulator()\n      }, 500)\n    },\n\n    createSimulator () {\n      const wrapper = this.$refs.wrapper\n      const pos = this.resizeSimulatorContainer(this.model, this.$refs.simCntr, 0.7);\n      wrapper.style.width = pos.w + 'px'\n      wrapper.style.height = pos.h + 'px'\n      this.simulator = this.$new(Simulator, {\n          isDesktopTest: true,\n          mode: \"recordFlow\",\n          logData: false\n      });\n      this.simulator.setHash(this.hash)\n      this.tempOwn(on(this.simulator, \"event\", lang.hitch(this, \"onEvent\")));\n      this.simulator.placeAt(wrapper);\n      this.simulator.scrollListenTarget = \"parent\";\n      this.simulator.startup();\n      this.simulator.abSelector = (lines, callback) => {this.showABDialog(lines, callback)}\n      this.simulator.setModel(this.model);\n    },\n\n    async showABDialog (lines, callback) {\n      this.logger.log(-1,  'showABDialog',  'enter > ', lines)\n      this.abCallback = callback\n      this.abLines = lines\n      this.abScreens = lines.map(line => {\n        let to = line.to\n        if (this.model.screens[to]) {\n          return this.model.screens[to]\n        }\n        if (this.model.widgets[to]) {\n          return this.model.widgets[to]\n        }\n      })\n\n    },\n\n    selectABLine (box) {\n      this.logger.log(-1,  'selectABLine',  'enter > ', box)\n      if (this.abLines && this.abCallback) {\n       let selectedLine = this.abLines.find(l => l.to === box.id)\n       this.abCallback(selectedLine)\n      }\n\n      this.abLines = null\n      this.abScreens = null\n      this.abCallback = null\n    },\n\n    resizeSimulatorContainer (app, node) {\n        let pos = domGeom.position(node)\n        pos.h = 600\n        if (app.type == 'smartphone') {\n            // there might be wide screen apps\n            if (app.screenSize.h < app.screenSize.w) {\n              this.logger.log(-1,  'resizeSimulatorContainer', 'Wide screen')\n \n              pos = this.getScaledSize(pos, \"width\", app);\n            } else {\n              pos = this.getScaledSize(pos, \"height\", app);\n            }\n            \n        } else {\n        \n            pos = this.getScaledSize(pos, \"width\", app);\n        }\n        return pos\n    },\n\n\n    onEvent (event) {\n      this.logger.log(-1,  'onEvent',  'enter > ignoreFirstEvent:' + this.ignoreFirstEvent, event)\n\n      if (this.recordOnlyScreenViews) {\n\n        if (event.type === 'ScreenLoaded' || event.type === 'OverlayLoaded' ) {\n          if (this.ignoreFirstEvent) {\n            this.logger.log(-1,  'onEvent',  'ignore first event')\n            this.ignoreFirstEvent = false\n            return\n          }\n          this.task.flow.push({\n            screen: event.screen,\n            widget: event.widget,\n            type: event.type,\n            state: event.state\n          });\n        }\n\n      } else  if (this.ignoredEvents.indexOf(event.type) < 0 ) {\n\n        if (this.ignoreFirstEvent) {\n          this.logger.log(-1,  'onEvent',  'ignore first event')\n          this.ignoreFirstEvent = false\n          return\n        }\n        this.task.flow.push({\n          screen: event.screen,\n          widget: event.widget,\n          type: event.type,\n          state: event.state\n        });\n      }\n\n    },\n\n    removeEvent (i) {\n      this.task.flow.splice(i, 1);\n    },\n\n    setStrict (value) {\n      this.task.strict = value;\n    },\n\n    onCancel () {\n      this.emit(\"close\", {});\n    },\n\n    onSave() {\n      this.task.flow.sort((a, b) => {\n        return a.time - b.time;\n      });\n      this.emit(\"save\", this.task);\n    },\n\n    getValue () {\n      return this.task\n    },\n\n    setValue (task) {\n      this.task = lang.clone(task)\n    },\n\n    cleanUp: function() {\n      this.cleanUpTempListener();\n    }\n  },\n  mounted() {}\n};\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TaskCreateDialog.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TaskCreateDialog.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TaskCreateDialog.vue?vue&type=template&id=7bcd965a\"\nimport script from \"./TaskCreateDialog.vue?vue&type=script&lang=js\"\nexport * from \"./TaskCreateDialog.vue?vue&type=script&lang=js\"\nimport style0 from \"./TaskCreateDialog.vue?vue&type=style&index=0&id=7bcd965a&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"MatcDashTaskPerfGram\"},[_vm._m(0),_c('div',{staticClass:\"MatcDashTaskPerfActionCntr\",attrs:{\"data-dojo-attach-point\":\"actionCntr\"}}),_c('div',{staticClass:\"MatcDashTaskPerfGramCntr\",attrs:{\"data-dojo-attach-point\":\"cntr\"}},[_c('span',{staticClass:\"MatxAxisXLine MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden\",attrs:{\"data-dojo-attach-point\":\"xLine\"}}),_c('span',{staticClass:\"MatxAxisYLine MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden\",attrs:{\"data-dojo-attach-point\":\"yLine\"}}),_c('div',{staticClass:\"MatcDashTaskPerfGramCanvas\",attrs:{\"data-dojo-attach-point\":\"canvas\"}}),_c('span',{staticClass:\"MatxAxisLabel xMaxLabel\",attrs:{\"data-dojo-attach-point\":\"xMaxLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel MatcDashTaskPerfGramDropOffHidden yMaxLabel\",attrs:{\"data-dojo-attach-point\":\"yMaxLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden xMiddleLabel\",attrs:{\"data-dojo-attach-point\":\"xMiddleLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden yMiddleLabel\",attrs:{\"data-dojo-attach-point\":\"yMiddleLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel minLabel\",attrs:{\"data-dojo-attach-point\":\"minLabel\"}},[_vm._v(\"0\")]),_c('span',{staticClass:\"MatxAxisLabel xLabel\",attrs:{\"data-dojo-attach-point\":\"xLabel\"}},[_vm._v(\"X\")]),_c('span',{staticClass:\"MatxAxisLabel yLabel MatcDashTaskPerfGramDropOffHidden\",attrs:{\"data-dojo-attach-point\":\"yLabel\"}},[_vm._v(\"Y\")]),_c('span',{staticClass:\"MatxAxisLabel yLabelEast MatcDashTaskPerfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"yLabelEast\"}},[_vm._v(\"Y\")]),_c('span',{staticClass:\"MatxAxisLabel yMinLabelEast MatcDashTaskPerfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"yMinLabelEast\"}},[_vm._v(\"0\")]),_c('span',{staticClass:\"MatxAxisLabel yMaxLabelEast MatcDashTaskPerfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"yMaxLabelEast\"}},[_vm._v(\"100\")]),_c('span',{staticClass:\"MatxAxisLabel yMinLabel\",attrs:{\"data-dojo-attach-point\":\"yMinLabel\"}}),_c('span',{staticClass:\"MatxAxisLabel bottom25Label MatcDashTaskPerfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"bottom25Label\"}}),_c('span',{staticClass:\"MatxAxisLabel bottom75Label MatcDashTaskPerfDetailsVisible\",attrs:{\"data-dojo-attach-point\":\"bottom75Label\"}}),_c('span',{staticClass:\"MatxAxisLabel MatxAxisLabelCntr\",attrs:{\"data-dojo-attach-point\":\"xAxisLabelCntr\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hasTaskSelector),expression:\"hasTaskSelector\"}],staticClass:\"MatcDashTaskPerfTaskCntr\",attrs:{\"data-dojo-attach-point\":\"taskCntr\"}}),_c('div',{staticClass:\"MatcDashTaskPerfDropCntr\",attrs:{\"data-dojo-attach-point\":\"dropoffCntr\"}},[_c('CheckBox',{attrs:{\"label\":\"Show Dropoff\"},on:{\"change\":_vm.onChangeFunnelDropOff}})],1)]),_c('div',{staticClass:\"MatcDashTaskPerHintBar\",attrs:{\"data-dojo-attach-point\":\"hintCntr\"}})])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"MatcToolbarTabContainer\"},[_c('div',{staticClass:\"MatcToolbarTabs\",attrs:{\"data-dojo-attach-point\":\"tabsCntr\"}})])\n}]\n\nexport { render, staticRenderFns }","\n<template>\n     <div class=\"MatcDashTaskPerfGram\">\n\t\t\t<div class=\"MatcToolbarTabContainer\">\n\t\t\t\t<div class=\"MatcToolbarTabs\" data-dojo-attach-point=\"tabsCntr\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"MatcDashTaskPerfActionCntr\" data-dojo-attach-point=\"actionCntr\">\n\t\t\t</div>\n\t\t\t\t<div class=\"MatcDashTaskPerfGramCntr\" data-dojo-attach-point=\"cntr\">\n\t\t\t\t\t<span class=\"MatxAxisXLine MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden\" data-dojo-attach-point=\"xLine\"></span>\n\t\t\t\t\t<span class=\"MatxAxisYLine MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden\" data-dojo-attach-point=\"yLine\"></span>\n\t\t\t\t\t<div class=\"MatcDashTaskPerfGramCanvas\" data-dojo-attach-point=\"canvas\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"MatxAxisLabel xMaxLabel\" data-dojo-attach-point=\"xMaxLabel\"></span>\n\t\t\t\t\t<span class=\"MatxAxisLabel MatcDashTaskPerfGramDropOffHidden yMaxLabel\" data-dojo-attach-point=\"yMaxLabel\"></span>\n\t\t\t\t\t<span class=\"MatxAxisLabel MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden xMiddleLabel\" data-dojo-attach-point=\"xMiddleLabel\"></span>\n\t\t\t\t\t<span class=\"MatxAxisLabel MatcDashTaskPerfScatternVisible MatcDashTaskPerfGramDurationHidden yMiddleLabel\" data-dojo-attach-point=\"yMiddleLabel\"></span>\n\t\t\t\t\t<span class=\"MatxAxisLabel minLabel\" data-dojo-attach-point=\"minLabel\">0</span>\n\t\t\t\t\t<span class=\"MatxAxisLabel xLabel \"  data-dojo-attach-point=\"xLabel\">X</span>\n\t\t\t\t\t<span class=\"MatxAxisLabel yLabel MatcDashTaskPerfGramDropOffHidden\" data-dojo-attach-point=\"yLabel\">Y</span>\n\n\t\t\t\t\t<span class=\"MatxAxisLabel yLabelEast MatcDashTaskPerfDetailsVisible\" data-dojo-attach-point=\"yLabelEast\">Y</span>\n\t\t\t\t\t<span class=\"MatxAxisLabel yMinLabelEast MatcDashTaskPerfDetailsVisible\" data-dojo-attach-point=\"yMinLabelEast\">0</span>\n\t\t\t\t\t<span class=\"MatxAxisLabel yMaxLabelEast MatcDashTaskPerfDetailsVisible\" data-dojo-attach-point=\"yMaxLabelEast\">100</span>\n\t\t\t\t\t<span class=\"MatxAxisLabel yMinLabel\" data-dojo-attach-point=\"yMinLabel\"></span>\n\n\t\t\t\t\t<span class=\"MatxAxisLabel bottom25Label MatcDashTaskPerfDetailsVisible\" data-dojo-attach-point=\"bottom25Label\"></span>\n\t\t\t\t\t<span class=\"MatxAxisLabel bottom75Label MatcDashTaskPerfDetailsVisible\" data-dojo-attach-point=\"bottom75Label\"></span>\n\n\t\t\t\t\t<span class=\"MatxAxisLabel MatxAxisLabelCntr\" data-dojo-attach-point=\"xAxisLabelCntr\"></span>\n\n\n\t\t\t\t\t<div class=\"MatcDashTaskPerfTaskCntr\" data-dojo-attach-point=\"taskCntr\" v-show=\"hasTaskSelector\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"MatcDashTaskPerfDropCntr\" data-dojo-attach-point=\"dropoffCntr\">\n\t\t\t\t\t\t<CheckBox label=\"Show Dropoff\" @change=\"onChangeFunnelDropOff\"/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t<div class=\"MatcDashTaskPerHintBar\" data-dojo-attach-point=\"hintCntr\">\n\t\t\t</div>\n\n\t</div>\n</template>\n<style lang=\"css\">\n  \n</style>\n\n<style lang=\"scss\">\n    @import '../../../style/components/task_perf_gram.scss';\n\t@import '../../../style/toolbar/tab.scss';\n</style>\n\n\n<script>\nimport DojoWidget from 'dojo/DojoWidget'\nimport on from 'dojo/on'\nimport lang from 'dojo/_base/lang'\nimport css from 'dojo/css'\nimport Logger from 'common/Logger'\nimport _Color from 'common/_Color'\nimport DomBuilder from 'common/DomBuilder'\nimport CheckBox from 'common/CheckBox'\nimport Util from 'core/Util'\nimport Analytics from 'dash/Analytics'\nimport * as d3 from \"d3\"\nimport DataFrame from 'common/DataFrame'\nimport {iconDOM} from 'page/QIconUtil'\n\n\nexport default {\n    name: 'TaskPerfGram',\n    mixins:[_Color, Util, DojoWidget],\n    data: function () {\n        return {\n            x_prefix: \"\",\n            paddingFactor: 1.1,\n            tab: \"scatter\",// \"scatter\",\n            tabs: {},\n            dialog: false,\n\t\t\tincludeDropOff: false,\n            colors: [\"#56A9FC\", \"#9933cc\", \"#669900\", \"#ff8a00\", \"#cc0000\", \"#000000\", \"#8ad5f0\", \"#d6adeb\", \"#c5e26d\"],\n            bins: 3,\n\t\t\tsmoothLineFunction: d3.line()\n\t\t\t\t.curve(d3.curveBasis)\n\t\t\t\t.x((d) => {\n\t\t\t\t\treturn d.x-.5; \n\t\t\t\t }).y((d) => { \n\t\t\t\t\treturn d.y-.5; \n\t\t\t\t}),\n\t\t\tstraightLineFunction: d3.line()\n\t\t\t\t.x((d) => { \n\t\t\t\t\treturn d.x-.5; \n\t\t\t\t})\n\t\t\t\t.y((d) => { \n\t\t\t\t\treturn d.y-.5; \n\t\t\t}),\n\t\t\tcanvasPos:{\n\t\t\t\tw:800,\n\t\t\t\th:450\n\t\t\t},\n\t\t\thasTaskSelector: true\n        }\n    },\n    components: {\n\t\tCheckBox\n\t},\n    methods: {\n        postCreate (){\n\t\t\tthis.log = new Logger(\"TaskPerfGram\");\n\t\t\tthis.init();\n\t\t\tthis._scatterPoints= {}\n\t\t},\n\n\t\tinit (){\n\t\t\tthis.db = new DomBuilder();\n\t\t\tthis.addTab(\"scatter\", \"MatcToolbarTabActive\");\n\t\t\tthis.addTab(\"details\", \"\");\n\t\t\tthis.addTab(\"funnelDurartion\", \"\");\n\t\t\tthis.addTab(\"funnelInteraction\", \"\");\n\t\t\tthis._scatterPoints = {};\n\t\t},\n\n\t\taddTab (key, cls){\n\t\t\tvar tab = this.db.a(cls, this.getNLS(\"dash.perf.tab.\" + key)).build(this.tabsCntr);\n\t\t\tthis.own(on(tab, \"mousedown\", lang.hitch(this, \"setTab\", key)));\n\t\t\tthis.tabs[key] = tab;\n\t\t},\n\n\t\tsetTab (tab){\n\t\t\tif (this.tab != tab){\n\t\t\t\tthis.lastTab = this.tab;\n\t\t\t\tthis.tab = tab;\n\t\t\t\tfor (var t in this.tabs){\n\t\t\t\t\tcss.remove(this.tabs[t], \"MatcToolbarTabActive\");\n\t\t\t\t}\n\t\t\t\tif (this.tabs[tab]){\n\t\t\t\t\tcss.add(this.tabs[tab], \"MatcToolbarTabActive\");\n\t\t\t\t}\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t},\n\n\t\tsetModel (m) {\n\t\t\tthis.model = m\n\t\t},\n\n\t\tsetValue (df, task, annotations, tasks){\n\t\t\tthis.df = df;\n\t\t\tthis.task = task;\n\t\t\tthis.annotations = annotations;\n\t\t\tthis.tasks = tasks;\n\t\t\tthis.renderTasks(tasks);\n\t\t\tthis.selectTask(task); // will call render\n\t\t\tthis.render();\n\t\t},\n\n\t\trenderTasks (tasks){\n\t\t\tthis.log.log(-1, \"renderTasks\", \"enter\");\n\t\t\tthis.taskDivs = {};\n\t\t\tthis.taskCircles = {};\n\t\t\tthis.selectedTasks = {};\n\t\t\tthis.taskColors = {};\n\t\t\tfor(let i=0; i< tasks.length; i++){\n\t\t\t\tconst task = tasks[i];\n\t\t\t\tif (task.flow.length >= 2) {\n\t\t\t\t\tthis.selectedTasks[task.id] = false;\n\t\t\t\t\tthis.taskColors[task.id] = this.colors[i % this.colors.length];\n\n\t\t\t\t\tconst div = this.db.div().build(this.taskCntr);\n\t\t\t\t\tconst circle = this.db.span(\"\").build(div);\n\n\t\t\t\t\tthis.db.label(\"\", tasks[i].name).build(div);\n\t\t\t\t\tthis.taskCircles[task.id] = circle;\n\t\t\t\t\tthis.taskDivs[task.id] = div;\n\n\t\t\t\t\tthis.own(on(div, \"click\", lang.hitch(this, \"clickTask\",task, i)));\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tclickTask (task){\n\t\t\tthis.selectTask(task);\n\t\t\tthis.render(true);\n\t\t},\n\n\t\tselectTask (task){\n\t\t\tthis.selectedTasks[task.id] = !this.selectedTasks[task.id];\n\t\t\tfor (let id in this.selectedTasks){\n\t\t\t\tconst circle = this.taskCircles[id];\n\t\t\t\tconst div = this.taskDivs[id];\n\t\t\t\t\n\t\t\t\tif (div &&  circle){\n\t\t\t\t\tif (this.selectedTasks[id]){\n\t\t\t\t\t\tcss.add(div, \"MatcDashTaskPerfTaskSelected\");\n\t\t\t\t\t\tcircle.style.background = this.taskColors[id];\n\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcss.remove(div, \"MatcDashTaskPerfTaskSelected\");\n\t\t\t\t\t\tcircle.style.background = \"\"; \t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\trender (changeTask){\n\t\t\tthis.log.log(-1, \"render\", \"enter > \" + changeTask);\n\t\t\tthis.cleanUpTempListener()\n\t\t\tif (this.task.flow && this.task.flow.length >= 2) {\n\t\t\t\tif (!changeTask && this[\"clean_\" + this.lastTab]){\n\t\t\t\t\tthis[\"clean_\" + this.lastTab](lang.hitch(this, \"renderTab\", changeTask));\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderTab(changeTask);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcss.add(this.tabsCntr, \"hidden\");\n\t\t\t\tcss.add(this.cntr, \"hidden\");\n\t\t\t\tthis.db.h2(\"\", this.getNLS(\"dash.perf.no-flow-title\")).build(this.domNode);\n\t\t\t\tthis.db.div(\"MatcMarginTop\", this.getNLS(\"dash.perf.no-flow-msg\"), true).build(this.domNode);\n\t\t\t}\n\t\t},\n\n\t\trenderTab (changeTask){\n\t\t\tif (this.tab === 'dropoff' || this.tab === 'funnelDurartion' || this.tab === 'funnelInteraction') {\n\t\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramHideTasks\");\n\t\t\t} else {\n\t\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramHideTasks\");\n\t\t\t}\n\n\t\t\tif (this.tab === 'funnelDurartion' || this.tab === 'funnelInteraction') {\n\t\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramHideDropoff\");\n\t\t\t} else {\n\t\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramHideDropoff\");\n\t\t\t}\n\t\t\t\t\n\n\t\t\tif (this[\"render_\" + this.tab]){\n\t\t\t\tthis[\"render_\" + this.tab](this.df, this.task, this.annotations, this.tasks, changeTask);\n\t\t\t} else {\n\t\t\t\tthis.log.error(\"render\", \"No render for \" + this.tab);\n\t\t\t}\n\t\t},\n\n\t\t/*********************************************************************\n\t\t * Funnel Interaction stuff\n\t\t *********************************************************************/\n\n\t\tonChangeFunnelDropOff (value) {\n\t\t\tthis.log.log(-1, \"onChangeFunnelDropOff\", \"enter > :\", this.tab);\n\t\t\tthis.includeDropOff = value\n\t\t\n\t\t\t// fixme: this should be updates with cool animations\n\t\t\tif (this.tab === 'funnelDurartion') {\n\t\t\t\tthis.clean_funnelDurartion()\n\t\t\t\tthis.render_funnelDurartion(this.df, this.task, true)\n\t\t\t}\n\n\t\t\tif (this.tab === 'funnelInteraction') {\n\t\t\t\tthis.clean_funnelInteraction()\n\t\t\t\tthis.render_funnelInteraction(this.df, this.task, true)\n\t\t\t}\n\n\t\t},\n\n\n\t\trender_funnelInteraction(df, task) { //\n\t\t\tthis.log.log(-1, \"render_funnelInteractions\", \"enter > :\", this.includeDropOff);\n\n\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramFunnel\");\n\t\t\n\t\t\tthis.xLabel.innerHTML = \"\"; \n\t\t\tthis.yLabel.innerHTML = \"\";\n\t\t\tthis.yLabelEast.innerHTML = \"\";\n\t\t\tthis.bottom25Label.innerHTML = \"\";\n\t\t\tthis.bottom75Label.innerHTML = \"\";\n\t\t\tthis.xMaxLabel.innerHTML = \"\";\n\t\t\tthis.yMaxLabel.innerHTML = \"\"\n\t\t\tthis.yMaxLabel.innerHTML = \"\"\n\t\t\tthis.yMinLabelEast.innerHTML = \"\"\n\t\t\tthis.minLabel.innerHTML = \"\"\n\t\t\tthis.yMinLabel.innerHTML = \"0\"\n\n\t\t\tconst offset = 60\n\t\t\tconst flow = task.flow\n\t\t\tconst stepWidth = (this.canvasPos.w - (offset * 2)) / (flow.length - 1)\n\t\t\tconst canvasHeight = this.canvasPos.h - 20\n\t\t\n\t\t\tconst analytics = new Analytics();\n\t\t\tconst stepData = analytics.getFunnelInteraction(df, task, this.includeDropOff)\t\n\t\t\tconst maxIteration = analytics.getFunnelMax(stepData) +1\n\t\t\tthis._render_funnel_steps(stepData, maxIteration, flow, stepWidth, offset, canvasHeight)\n\t\t\tthis._render_funnel_lines(stepData, maxIteration, stepWidth, offset, canvasHeight, duration => {return Math.round(duration)})\n\t\t\n\t\t\tthis.yMaxLabel.innerHTML = maxIteration\n\t\t\tthis.tempOwn(on(this.cntr, \"click\", () => this.reset_funnel_selection()));\n\t\t\n\t\t},\n\n\t\tclean_funnelInteraction (callback) {\n\t\t\tthis.log.log(-1, \"clean_funnelInteractions\", \"enter > :\");\n\n\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramFunnel\");\n\t\t\t\n\t\t\tif (this._stepDivs) {\n\t\t\t\tthis._stepDivs.forEach(div => {\n\t\t\t\t\tdiv.parentNode.removeChild(div)\n\t\t\t\t})\n\t\t\t\tdelete this._stepDivs\n\t\t\t}\n\t\t\tif (this.funnelSVG) {\n\t\t\t\tthis.canvas.innerHTML = \"\"\n\t\t\t\tdelete this.funnelSVG\n\t\t\t}\n\t\t\tthis.xAxisLabelCntr.innerHTML = \"\"\n\t\t\tthis.yMinLabel.innerHTML = \"\"\n\t\t\tif (callback) {\n\t\t\t\tcallback()\n\t\t\t}\n\t\t},\n\n\n\t\t/*********************************************************************\n\t\t * Funnel Duration stuff\n\t\t *********************************************************************/\n\n\n\t\trender_funnelDurartion (df, task) {\n\t\t\tthis.log.log(-1, \"render_funnelDurartion\", \"enter > :\");\n\n\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramFunnel\");\n\n\t\t\tthis.xLabel.innerHTML = \"\"; //this.getNLS(\"dash.perf.details.xLabel\");\n\t\t\tthis.yLabel.innerHTML = \"\";//this.getNLS(\"dash.perf.details.yLabel\");\n\t\t\tthis.yLabelEast.innerHTML = \"\"; //this.getNLS(\"dash.perf.details.yLabelEast\");\n\t\t\tthis.bottom25Label.innerHTML = \"\";\n\t\t\tthis.bottom75Label.innerHTML = \"\";\n\t\t\tthis.xMaxLabel.innerHTML = \"\";\n\t\t\tthis.yMaxLabel.innerHTML = \"\"\n\t\t\tthis.yMaxLabel.innerHTML = \"\"\n\t\t\tthis.yMinLabelEast.innerHTML = \"\"\n\t\t\tthis.minLabel.innerHTML = \"\"\n\t\t\tthis.yMinLabel.innerHTML = \"0\"\n\n\t\t\tconst offset = 60\n\t\t\tconst flow = task.flow\n\t\t\tconst stepWidth = (this.canvasPos.w - (offset * 2)) / (flow.length - 1)\n\t\t\tconst canvasHeight = this.canvasPos.h - 20\n\t\t\n\t\t\tconst analytics = new Analytics();\n\t\t\tconst stepData = analytics.getFunnelDuration(df, task, this.includeDropOff)\t\n\t\t\tconst maxDuration = analytics.getFunnelMax(stepData) + 1000\n\t\t\tthis._render_funnel_steps(stepData, maxDuration, flow, stepWidth, offset, canvasHeight)\n\t\t\tthis._render_funnel_lines(stepData, maxDuration, stepWidth, offset, canvasHeight, duration => {\n\t\t\t\treturn (Math.round(duration / 100) / 10)+ ' s'\n\t\t\t})\n\t\t\t\t\n\t\t\tthis.yMaxLabel.innerHTML = Math.ceil(maxDuration / 1000) + ' s'\n\t\t\tthis.tempOwn(on(this.cntr, \"click\", () => this.reset_funnel_selection()));\n\t\t\n\t\t},\n\n\t\treset_funnel_selection () {\n\t\t\tthis.selectFunnelPoint(false)\n\t\t\tthis.setHint()\n\t\t},\n\n\t\t_render_funnel_lines (stepData, maxValue,  stepWidth, offset, canvasHeight, lblFunction) {\n\n\t\t\tconst svgCntr = this.db.div('MatcDashTaskPerfGramFunnelSVG MatcDashTaskPerfGramFunnelSVGHidden').build(this.canvas)\n\t\n\t\t\tthis.funnelSVG = d3\n\t\t\t\t.select(svgCntr)\n\t\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"width\", this.canvasPos.w)\n\t\t\t\t.attr(\"height\",this.canvasPos.h)\n\n\t\t\tthis.lineSVGs = {}\n\t\t\tthis.lineColor = {}\n\t\t\tthis.linePoints = {}\n\n\t\t\t// FIXME: here we could build a try to customize width and opacity?\n\t\t\t\t\n\t\t\tfor (let id in stepData) {\n\t\t\t\tlet steps = stepData[id]\n\t\t\t\tthis._render_funnel_session_line(id, steps, maxValue, stepWidth, canvasHeight, offset, lblFunction)\n\t\t\t}\n\t\t\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\tcss.remove(svgCntr, 'MatcDashTaskPerfGramFunnelSVGHidden')\n\t\t\t}, 200)\n\t\t},\n\n\t\t_render_funnel_session_line(id, steps, maxValue, stepWidth, canvasHeight, offset, lblFunction) {\n\t\t\t\tconst curveOffset = Math.round(stepWidth / 4)\n\t\t\t\tlet line = []\n\t\t\t\tlet color = this.colors[0]\n\t\t\t\tthis.linePoints[id] = []\n\t\t\t\tsteps.forEach((step, i) => {\n\n\t\t\t\t\tcolor = step.dropoff === true ? 'red': this.colors[0]\n\n\t\t\t\t\tlet point = {\n\t\t\t\t\t\tx: (offset + (stepWidth * i)),\n\t\t\t\t\t\ty: canvasHeight - ((step.value / maxValue) * canvasHeight)\n\t\t\t\t\t}\n\t\t\t\t\tlet div = this.db.div('MatcDashTaskPerfGramFunnelStepPoint')\n\t\t\t\t\t\t.left(point.x)\n\t\t\t\t\t\t.top(point.y)\n\t\t\t\t\t\t.build(this.canvas)\n\n\t\t\t\t\tthis.db.div('MatcDashTaskPerfGramFunnelStepPointLabel', lblFunction(step.value)).build(div)\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.background = color\n\t\t\t\t\tthis.tempOwn(on(div, \"click\", lang.hitch(this, \"selectFunnelPoint\", id)));\n\t\t\t\t\n\t\t\t\t\tthis.linePoints[id].push(div)\n\t\t\t\t\tif  (i > 0) {\n\t\t\t\t\t\tline.push({\n\t\t\t\t\t\t\tx: point.x - curveOffset,\n\t\t\t\t\t\t\ty: point.y\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tline.push(point)\n\t\t\t\t\tif (i < steps.length-1) {\n\t\t\t\t\t\tline.push({\n\t\t\t\t\t\t\tx: point.x + curveOffset,\n\t\t\t\t\t\t\ty: point.y\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\tlet svg = this.funnelSVG.append(\"path\")\n\t\t\t\t\t\t.attr(\"d\", this.smoothLineFunction(line))\n\t\t\t\t\t\t.attr(\"stroke\", color)\n\t\t\t\t\t\t.attr(\"stroke-width\", 1 )\n\t\t\t\t\t\t.attr(\"fill\", \"none\")\n\t\t\t\t\t\t.style(\"opacity\", 0.5);\n\t\t\t\tthis.lineSVGs[id] = svg\n\t\t\t\tthis.lineColor[id] = color\n\t\t},\n\n\t\t_render_funnel_steps (stepData, maxValue, flow, width, offset, canvasHeight) {\n\t\t\tthis._stepDivs = []\n\t\t\n\t\t\tif (flow.length > 1) {\n\t\t\t\tflow.forEach((step, i) => {\n\n\t\t\t\t\tconst values = this.getStepData(stepData, i)\n\t\t\t\t\n\t\t\t\t\tconst stepDF = new DataFrame(values)\n\t\t\t\t\n\t\t\t\t\tconst max = Math.ceil(stepDF.max(\"value\"));\n\t\t\t\t\tconst min = Math.ceil(stepDF.min(\"value\"));\n\t\t\t\t\tconst mean = Math.ceil(stepDF.mean(\"value\"));\n\t\t\t\t\tconst std = Math.ceil(stepDF.std(\"value\"));\n\t\t\t\t\tconst left = (offset + (width * i))\n\n\t\t\t\t\tconst div = this.db.\n\t\t\t\t\t\tdiv('MatcDashTaskPerfGramFunnelStep MatcDashTaskPerfGramFunnelStepSmall')\n\t\t\t\t\t\t.left(left)\n\t\t\t\t\t\t.build(this.canvas)\n\n\t\t\t\n\t\t\t\t\tthis.render_funnel_box_plot(\n\t\t\t\t\t\tdiv, -11, 20, max, min, mean, std, maxValue, \n\t\t\t\t\t\tthis.colors[0], canvasHeight)\n\t\t\n\t\t\t\t\tthis._stepDivs.push(div)\n\n\n\t\t\t\t\tconst label = flow.length < 7\n\t\t\t\t\t\t? this.getNiceEventLabel (step, i, false) \n\t\t\t\t\t\t: 'Step ' + (i +1)\n\n\t\t\t\t\tthis.db\n\t\t\t\t\t\t.div('MatcDashTaskPerfGramFunnelStepLabel', label)\n\t\t\t\t\t\t.left((offset + (width * i)))\n\t\t\t\t\t\t.build(this.xAxisLabelCntr)\n\n\t\t\t\t\t\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcss.remove(div, 'MatcDashTaskPerfGramFunnelStepSmall')\n\t\t\t\t\t}, Math.min(300, 50 * i))\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\n\t\trender_funnel_box_plot(parent, left, width ,max, min, mean, std, total, color, canvasHeight) {\n\t\t\tconst height = (((max-min) / total) * canvasHeight)\n\t\t\tconst cntr = this.db\n\t\t\t\t.div(\"MatcDashTaskPerfGramBoxPlotCntr\")\n\t\t\t\t.top(canvasHeight - ((max / total) * canvasHeight ))\n\t\t\t\t.h(height)\n\t\t\t\t.w(width)\n\t\t\t\t.left(left)\n\t\t\t\t.build(parent);\n\n\t\t\tconst bar = this.db\n\t\t\t\t.div(\"MatcDashTaskPerfGramBoxPlot\")\n\t\t\t\t.build(cntr)\n\t\t\tbar.style.bottom = Math.max(0, ((((mean-std)-min) / (max-min)))) * 100 + \"%\"\n\t\t\tbar.style.height = ((std * 2) / (max-min)) * 100 + \"%\"\n\t\t\tbar.style.background = color\n\n\t\t\tconst centre = this.db\n\t\t\t\t.div(\"MatcDashTaskPerfGramBoxPlotMean\")\n\t\t\t\t.build(cntr)\n\t\t\tcentre.style.bottom = (((mean-min) / (max-min))) *100 + \"%\"\n\t\t},\n \n\t\tgetStepData(stepData, i) {\n\t\t\tconst result = []\n\t\t\tfor (let id in stepData) {\n\t\t\t\tconst steps = stepData[id]\n\t\t\t\tif (steps[i] !== undefined) {\n\t\t\t\t\tresult.push(steps[i])\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\treturn result\n\t\t},\n\n\t\tselectFunnelPoint (id, e) {\n\t\t\tthis.log.log(-1, \"selectFunnelPoint\", \"enter > :\", id);\n\t\t\tthis.stopEvent(e)\n\t\t\tthis.showSessionReplayHint(id)\n\n\t\t\tfor (let session in this.lineSVGs) {\n\t\t\t\tconst svg = this.lineSVGs[session]\n\t\t\t\tconst color = session === id ? this.colors[1] : this.lineColor[session]\n\n\t\t\t\tif(svg){\n\t\t\t\t\tsvg.attr(\"stroke\", color )\n\t\t\t\t}\n\t\t\t\tif (this.linePoints[session]) {\n\t\t\t\t\tthis.linePoints[session].forEach(div => {\n\t\t\t\t\t\tdiv.style.background = color\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t},\n\n\t\tclean_funnelDurartion (callback) {\n\t\t\tthis.log.log(-1, \"clean_funnelDurartion\", \"enter > :\");\n\n\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramFunnel\");\n\t\t\t\n\t\t\tif (this._stepDivs) {\n\t\t\t\tthis._stepDivs.forEach(div => {\n\t\t\t\t\tdiv.parentNode.removeChild(div)\n\t\t\t\t})\n\t\t\t\tdelete this._stepDivs\n\t\t\t}\n\t\t\tif (this.funnelSVG) {\n\t\t\t\tthis.canvas.innerHTML = \"\"\n\t\t\t\tdelete this.funnelSVG\n\t\t\t}\n\t\t\tthis.xAxisLabelCntr.innerHTML = \"\"\n\t\t\tthis.yMinLabel.innerHTML = \"\"\n\t\t\tif (callback) {\n\t\t\t\tcallback()\n\t\t\t}\n\t\t},\n\n\n\t\t/*********************************************************************\n\t\t * BoxPlot\n\t\t *********************************************************************/\n\n\n\t\trender_details (df, task, annotations, tasks){\n\t\t\tthis.log.log(-1, \"render_duration\", \"enter > changeTask:\");\n\n\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramDetails\");\n\t\t\tthis.xLabel.innerHTML = \"\"; //this.getNLS(\"dash.perf.details.xLabel\");\n\t\t\tthis.yLabel.innerHTML = \"\";//this.getNLS(\"dash.perf.details.yLabel\");\n\t\t\tthis.yLabelEast.innerHTML = \"\"; //this.getNLS(\"dash.perf.details.yLabelEast\");\n\t\t\tthis.bottom25Label.innerHTML = this.getNLS(\"dash.perf.details.bottom25Label\");\n\t\t\tthis.bottom75Label.innerHTML = this.getNLS(\"dash.perf.details.bottom75Label\");\n\t\t\tthis.xMaxLabel.innerHTML = \"\";\n\t\t\tthis.yMinLabel.innerHTML = \"\"\n\t\t\tthis.minLabel.innerHTML = \"\"\n\n\t\t\tvar analytics = new Analytics();\n\t\t\tvar perf = analytics.getTaskPerformance(df, tasks);\n\n\t\t\t// loop to get the max\n\t\t\tvar max_duration = 1;\n\t\t\tvar max_count = 1;\n\t\t\tvar selectCount = 0;\n\t\t\tfor (let id in this.selectedTasks){\n\t\t\t\tif (this.selectedTasks[id]){\n\t\t\t\t\tlet taskDF = perf.select(\"task\", \"==\", id);\n\t\t\t\t\tmax_duration = Math.max(max_duration, Math.ceil(taskDF.max(\"duration\") * this.paddingFactor));\n\t\t\t\t\tmax_count = Math.max(max_count, Math.ceil(taskDF.max(\"interactions\") * this.paddingFactor));\n\t\t\t\t\tselectCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.yMaxLabel.innerHTML = max_count;\n\t\t\tthis.yMaxLabelEast.innerHTML = Math.ceil(max_duration / 1000) + \" s\";\n\n\n\t\t\t/**\n\t\t\t * Now render selected tasks and remove not selected tasks\n\t\t\t */\n\t\t\tvar i=0;\n\t\t\tvar w = 2;\n\t\t\tvar slots = (selectCount * 2) -1;\n\t\t\tfor (let id in this.selectedTasks){\n\t\t\t\tif (this.selectedTasks[id]){\n\t\t\t\t\tlet taskDF = perf.select(\"task\", \"==\", id);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Create interactions box plot\n\t\t\t\t\t */\n\t\t\t\t\tlet max = Math.ceil(taskDF.max(\"interactions\"));\n\t\t\t\t\tlet min = Math.ceil(taskDF.min(\"interactions\"));\n\t\t\t\t\tlet mean = Math.ceil(taskDF.mean(\"interactions\"));\n\t\t\t\t\tlet std = Math.ceil(taskDF.std(\"interactions\"));\n\t\t\t\t\tlet left = (25 - ((w * slots)/2)) + (i * 2 * w) + \"%\";\n\t\t\t\t\tthis.createBoxPlot(id , \"i\", i, left, w, max, min, mean, std, max_count, this.taskColors[id]);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Create duration box plot\n\t\t\t\t\t */\n\t\t\t\t\tmax = Math.ceil(taskDF.max(\"duration\"));\n\t\t\t\t\tmin = Math.ceil(taskDF.min(\"duration\"));\n\t\t\t\t\tmean = Math.ceil(taskDF.mean(\"duration\"));\n\t\t\t\t\tstd = Math.ceil(taskDF.std(\"duration\"));\n\t\t\t\t\tleft = (75 - ((w * slots)/2)) + (i * 2 * w) + \"%\";\n\t\t\t\t\tthis.createBoxPlot(id , \"d\", i, left, w, max, min, mean, std, max_duration, this.taskColors[id]);\n\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove not needed box plots\n\t\t\t\t\t */\n\t\t\t\t\tif (this._bars){\n\t\t\t\t\t\tif (this._bars[id + \"i\"]){\n\t\t\t\t\t\t\tlet bar = this._bars[id + \"i\"];\n\t\t\t\t\t\t\tbar.parentNode.removeChild(bar);\n\t\t\t\t\t\t\tdelete this._bars[id + \"i\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._bars[id + \"d\"]){\n\t\t\t\t\t\t\tlet bar = this._bars[id + \"d\"];\n\t\t\t\t\t\t\tbar.parentNode.removeChild(bar);\n\t\t\t\t\t\t\tdelete this._bars[id + \"d\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcreateBoxPlot (id, prefix, i, left, width ,max, min, mean, std, total, color, widthUnit = '%'){\n\n\t\t\tif (!this._bars) {\n\t\t\t\tthis._bars = {}\n\t\t\t}\n\n\t\t\tvar height = (((max-min) / total) *100)+ \"%\";\n\t\t\tvar ms = Math.min(i*60, 500);\n\t\t\tif (!this._bars[id + prefix]){\n\t\t\t\t/**\n\t\t\t\t * Create new\n\t\t\t\t */\n\t\t\t\tlet cntr = this.db.div(\"MatcDashTaskPerfGramBoxPlotCntr\").build(this.canvas);\n\t\t\t\tcntr.style.bottom = ((min / total) *100)+ \"%\"\n\t\t\t\tcntr.style.left = left;\n\t\t\t\tcntr.style.height = \"0px\";\n\t\t\t\tcntr.style.width = width + widthUnit\n\n\t\t\t\tthis.db.div(\"MatcDashTaskPerfGramBoxPlotLine\").build(cntr);\n\n\t\t\t\tvar bar = this.db.div(\"MatcDashTaskPerfGramBoxPlot\").build(cntr);\n\t\t\t\tbar.style.bottom = Math.max(0, ((((mean-std)-min) / (max-min)))) * 100 + \"%\";\n\t\t\t\tbar.style.height = ((std * 2) / (max-min)) * 100 + \"%\";\n\t\t\t\tbar.style.background = color\n\n\t\t\t\tvar centre = this.db.div(\"MatcDashTaskPerfGramBoxPlotMean\").build(cntr);\n\t\t\t\tcentre.style.bottom = (((mean-min) / (max-min))) *100 + \"%\"\n\n\t\t\t\tsetTimeout(lang.hitch(this, \"animateBoxplot\",  cntr, height), ms);\n\t\t\t\tthis._bars[id + prefix] = cntr;\n\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Update exiting ones\n\t\t\t\t */\n\t\t\t\tlet cntr = this._bars[id + prefix];\n\t\t\t\tcntr.style.left = left;\n\t\t\t\tsetTimeout(lang.hitch(this, \"animateBoxplot\",  cntr, height), ms);\n\t\t\t}\n\t\t},\n\n\t\tanimateBoxplot (bar, height){\n\t\t\tbar.style.height = height;\n\t\t},\n\n\t\tclean_details (callback){\n\t\t\tthis.log.log(-1, \"clean_duration\", \"enter\");\n\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramDetails\");\n\t\t\tthis.setHint();\n\n\t\t\tif(this._bars){\n\t\t\t\tfor (var id in this._bars){\n\t\t\t\t\tvar b = this._bars[id];\n\t\t\t\t\tb.style.height = \"0%\";\n\t\t\t\t\tb.style.bottom = \"0%\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(lang.hitch(this, \"removeBoxplots\"), 200);\n\n\t\t\tif (callback){\n\t\t\t\tsetTimeout(callback, 200);\n\t\t\t}\n\t\t},\n\n\n\t\tremoveBoxplots:function(){\n\t\t\tif(this._bars){\n\t\t\t\tfor (var id in this._bars){\n\t\t\t\t\tvar b = this._bars[id];\n\t\t\t\t\tthis.canvas.removeChild(b)\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._bars;\n\t\t},\n\n\n\n\t\t/*********************************************************************\n\t\t * Scatter\n\t\t *********************************************************************/\n\n\t\trender_scatter (df, task, annotations, tasks, changeTask){\n\t\t\tthis.log.log(-1, \"render_scatter\", \"enter > changeTask:\" + changeTask);\n\n\t\t\tvar db = new DomBuilder();\n\n\t\t\t/**\n\t\t\t * reset some stuff\n\t\t\t */\n\t\t\tdelete this._selectedScatterPoint;\n\n\n\t\t\tthis.setHint(db.span(\"\", this.getNLS(\"dash.perf.hint.scatter\")).build());\n\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramScatter\");\n\t\t\tthis.xLabel.innerHTML = this.getNLS(\"dash.perf.scatter.xLabel\");\n\t\t\tthis.yLabel.innerHTML = this.getNLS(\"dash.perf.scatter.yLabel\");\n\t\t\tthis.minLabel.innerHTML = \"0 s\"\n\t\t\tthis.yMinLabel.innerHTML = \"0\"\n\n\t\t\tvar analytics = new Analytics();\n\t\t\tvar perf = analytics.getTaskPerformance(df, tasks);\n\n\t\t\t// loop to get the max\n\t\t\tlet max_duration = 1;\n\t\t\tlet max_count = 1;\n\t\t\tlet mean_duration = 0\n\t\t\tlet mean_count = 0\n\t\t\tlet maxDelay = 0;\n\t\t\tfor (let id in this.selectedTasks){\n\t\t\t\tif (this.selectedTasks[id]){\n\t\t\t\t\tlet taskDF = perf.select(\"task\", \"==\", id);\n\t\t\t\t\tmax_duration = Math.max(max_duration, Math.ceil(taskDF.max(\"duration\") * this.paddingFactor));\n\t\t\t\t\tmax_count = Math.max(max_count, Math.ceil(taskDF.max(\"interactions\") * this.paddingFactor));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.xMaxLabel.innerHTML = Math.ceil(max_duration / 1000) + \" s\" ;\n\t\t\tthis.yMaxLabel.innerHTML = Math.ceil(max_count);\n\t\t\tfor (let id in this.selectedTasks){\n\t\t\t\tlet taskDF = perf.select(\"task\", \"==\", id);\n\t\t\t\tlet sessions = taskDF.data;\n\t\t\t\tsessions.sort(function(a,b){\n\t\t\t\t\treturn b.interactions - a.interactions;\n\t\t\t\t});\n\n\t\t\t\tif (this.selectedTasks[id]){\n\t\t\t\t\tmean_duration = taskDF.mean(\"duration\");\n\t\t\t\t\tmean_count = taskDF.mean(\"interactions\");\n\t\t\t\n\t\t\t\t\tfor (let i=0; i< sessions.length; i++){\n\t\t\t\t\t\tlet s = sessions[i];\n\t\t\t\t\t\tlet key = s.session + \" \" + id;\n\t\t\t\t\t\tlet ms = Math.min(i*10, 300);\n\t\t\t\t\t\tmaxDelay = Math.max(maxDelay, ms)\n\n\t\t\t\t\t\tif (this._scatterPoints[key]){\n\t\t\t\t\t\t\tlet p = this._scatterPoints[key];\n\t\t\t\t\t\t\tthis.tempOwn(on(p, \"click\", lang.hitch(this, \"selectPoint\", p, s, i)));\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, \"animateScatterPoint\",p, s, max_duration, max_count), ms);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet p = db.span(\"MatxScatterPoint\").build(this.canvas);\n\t\t\t\t\t\t\tp.style.bottom =  \"-5%\";\n\t\t\t\t\t\t\tp.style.left = (((s.duration / max_duration) * 100))+ \"%\";\n\t\t\t\t\t\t\tp.style.background = this.taskColors[id];\n\t\t\t\t\t\t\tthis._scatterPoints[key] = p;\n\t\t\t\t\t\t\tthis.tempOwn(on(p, \"click\", lang.hitch(this, \"selectPoint\", p, s, i)));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, \"animateScatterPoint\",p, s, max_duration, max_count), ms);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// remove all not needed elements\n\t\t\t\t\tfor (let i=0; i< sessions.length; i++){\n\t\t\t\t\t\tlet s = sessions[i];\n\t\t\t\t\t\tlet key = s.session + \" \" + id;\n\t\t\t\t\t\tif (this._scatterPoints[key]){\n\t\t\t\t\t\t\tlet p = this._scatterPoints[key];\n\t\t\t\t\t\t\tp.style.opacity =0;\n\t\t\t\t\t\t\tsetTimeout(lang.hitch(this, \"fadeOutPoint\", p), 300);\n\t\t\t\t\t\t\tdelete this._scatterPoints[key]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// save values for select events\n\t\t\tthis.max_interactions = max_count;\n\t\t\tthis.max_duration = max_duration;\n\n\t\t\t// FIXME: Should be per task...\n\t\t\tsetTimeout(lang.hitch(this, \"setMiddle\",mean_count, max_count, mean_duration, max_duration),200);\n\t\t},\n\n\t\tfadeOutPoint (p){\n\t\t\tif (p.parentNode){\n\t\t\t\tp.parentNode.removeChild(p);\n\t\t\t}\n\t\t},\n\n\t\tclean_scatter (callback){\n\t\t\tthis.log.log(-1, \"clean_scatter\", \"enter\");\n\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramScatter\");\n\t\t\tthis.setHint();\n\t\t\tif(this._scatterPoints){\n\t\t\t\tfor (var sessionID in this._scatterPoints){\n\t\t\t\t\tvar p = this._scatterPoints[sessionID];\n\t\t\t\t\tp.style.bottom = \"-5%\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(lang.hitch(this, \"removePoints\"), 200);\n\t\t\tif (callback){\n\t\t\t\tsetTimeout(callback, 200);\n\t\t\t}\n\t\t\tthis.yMinLabel.innerHTML = \"\"\n\t\t\tthis.minLabel.innerHTML = \"\"\n\t\t},\n\n\t\tremovePoints (){\n\t\t\tif(this._scatterPoints){\n\t\t\t\tfor (var sessionID in this._scatterPoints){\n\t\t\t\t\tvar p = this._scatterPoints[sessionID];\n\t\t\t\t\tif (p.parentNode){\n\t\t\t\t\t\tp.parentNode.removeChild(p)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._scatterPoints;\n\t\t\tthis._scatterPoints = {};\n\t\t},\n\n\t\tselectPoint (p, s, i, e){\n\t\t\tthis.stopEvent(e);\n\t\t\tthis.setXMiddle(s.duration, this.max_duration);\n\t\t\tthis.setYMiddle(s.interactions, this.max_interactions);\n\t\t\tcss.add(this.cntr, \"MatcDashTaskPerfGramCntrHover\");\n\t\t\tthis._selectedScatterPoint = p;\n\t\t\tthis.showSessionReplayHint(s.session)\n\t\t},\n\n\t\tshowSessionReplayHint(id) {\n\t\t\tif (this.model){\n\t\t\t\tlet url = \"#/apps/\" + this.model.id + \"/replay/\" + id + \".html\";\n\t\t\t\tif (this.mode == \"public\"){\n\t\t\t\t\turl = \"#/examples/\" + this.model.id + \"/replay/\" + id + \".html\";\n\t\t\t\t}\n\t\t\t\tconst hint = this.db.span(\"\", this.getNLS(\"dash.perf.hint.session-msg\")).build();\n\t\t\t\tconst a = this.db.a(\"\", this.getNLS(\"dash.perf.hint.session-play\")).build(hint);\n\t\t\t\ta.href = url\n\t\t\t\ta.target = \"_matcSessionReplay\" + id\n\t\t\t\tthis.setHint(hint);\n\t\t\t}\n\t\t},\n\n\n\n\t\t/*********************************************************************\n\t\t * DropOff\n\t\t *********************************************************************/\n\n\t\trender_dropoff (df, task, annotations){\n\t\t\tthis.log.log(-1, \"render_dropoff\", \"enter > \" + task.flow.length);\n\n\t\t\tcss.add(this.domNode, \"MatcDashTaskPerfGramDropOff\");\n\t\t\tthis.xLabel.innerHTML = this.getNLS(\"dash.perf.dropoff.xLabel\");\n\t\t\tthis.xMaxLabel.innerHTML = \"100%\";\n\t\t\tthis.minLabel.innerHTML = \"\"\n\t\t\tthis._bars = {}\n\t\t\tthis._barLabels = {}\n\n\t\t\tif (!this.funnel) {\n\t\t\t\tvar analytics = new Analytics();\n\t\t\t\tthis.funnel = analytics.getFunnelSummary(df, task, annotations);\n\t\t\t}\n\n\t\t\t// var height = Math.min(10, (100 / (this.funnel.length*2 - 1)));\n\t\t\tfor(var i=0; i< this.funnel.length; i++){\n\t\t\t\tvar summary = this.funnel[i];\n\t\t\t\tvar v = summary.p;\n\n\t\t\t\tif(summary.event){\n\t\t\t\t\tvar lbl = this.getNiceEventLabel(summary.event, i);\n\t\t\t\t\tvar top = ((i-1) * 40 + 10) +\"px\"\n\n\t\t\t\t\tvar bar = this.db.div(\"MatcDashTaskPerfGramBar\").build(this.canvas);\n\t\t\t\t\tbar.style.top = top\n\t\t\t\t\tbar.style.left = \"0px\"\n\t\t\t\t\tbar.style.height = \"20px\";\n\t\t\t\t\tbar.style.width =\"0%\";\n\t\t\t\t\tbar.style.background = this.greenToRed(v)\n\t\t\t\t\tbar.innerHTML = Math.round(v * 100) + \"%\";\n\n\t\t\t\t\tvar label = this.db.span(\"MatxAxisLabel MatcDashTaskPerfGramBarLabel MatcDashTaskPerfGramScatterHidden MatcDashTaskPerfGramBarLabelHidden\", lbl).build(this.cntr);\n\t\t\t\t\tlabel.style.top = top;\n\n\t\t\t\t\tvar ms = Math.min(i*60, 500);\n\t\t\t\t\tsetTimeout(lang.hitch(this, \"animateBar\",  bar, label, Math.max(1, Math.min(99, v*100)) + \"%\"), ms);\n\n\t\t\t\t\tthis._bars[i] = bar;\n\t\t\t\t\tthis._barLabels[i] = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tanimateBar (bar, label, width){\n\t\t\tbar.style.width = width;\n\t\t\tcss.remove(label, \"MatcDashTaskPerfGramBarLabelHidden\");\n\t\t},\n\n\t\tclean_dropoff (callback){\n\t\t\tthis.log.log(-1, \"clean_dropoff\", \"enter\");\n\t\t\tcss.remove(this.domNode, \"MatcDashTaskPerfGramDropOff\");\n\t\t\tif(this._barLabels){\n\t\t\t\tfor (let id in this._barLabels){\n\t\t\t\t\tlet b = this._barLabels[id];\n\t\t\t\t\tb.parentNode.removeChild(b);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._barLabels;\n\t\t\tif(this._bars){\n\t\t\t\tfor (let id in this._bars){\n\t\t\t\t\tlet b = this._bars[id];\n\t\t\t\t\tb.style.width = \"0%\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(lang.hitch(this, \"removeBars\"), 200);\n\t\t\tthis.setHint();\n\t\t\tif (callback){\n\t\t\t\tsetTimeout(callback, 200);\n\t\t\t}\n\t\t},\n\n\t\tremoveBars (){\n\t\t\tif(this._bars){\n\t\t\t\tfor (var id in this._bars){\n\t\t\t\t\tvar b = this._bars[id];\n\t\t\t\t\tthis.canvas.removeChild(b)\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._bars;\n\t\t},\n\n\n\t\t/*********************************************************************\n\t\t * Helper\n\t\t *********************************************************************/\n\n\n\t\tshowSessionReplay (url, i, e){\n\t\t\tthis.stopEvent(e);\n\t\t\tif (this.dialog){\n\t\t\t\tthis.dialog.close();\n\t\t\t}\n\t\t\tlocation.href = url;\n\t\t},\n\n\t\thoverPoint (p){\n\t\t\tif (this._selectedScatterPoint == p){\n\t\t\t\tcss.add(this.cntr, \"MatcDashTaskPerfGramCntrHover\");\n\t\t\t}\n\t\t},\n\n\t\tsetHint (hintNode){\n\t\t\tthis.hintCntr.innerHTML = \"\";\n\t\t\tif(hintNode){\n\t\t\t\tthis.hintCntr.appendChild(iconDOM('PlayVideo'))\n\t\t\t\tthis.hintCntr.appendChild(hintNode);\n\t\t\t}\n\t\t},\n\n\t\tclearPoint (){\n\t\t\t//this.setMiddle(mean_count, max_count, mean_duration, max_duration);\n\t\t\tcss.remove(this.cntr, \"MatcDashTaskPerfGramCntrHover\");\n\t\t},\n\n\t\tsetMiddle (mean_count, max_count, mean_duration, max_duration){\n\t\t\tthis.setXMiddle(mean_duration, max_duration);\n\t\t\tthis.setYMiddle(mean_count, max_count);\n\t\t\tcss.remove(this.cntr, \"MatcDashTaskPerfGramCntrHover\");\n\t\t},\n\n\t\tsetYMiddle (count, max_count){\n\t\t\tthis.yMiddleLabel.innerHTML = Math.ceil(count);\n\t\t\tthis.yMiddleLabel.style.bottom = ((count / max_count) * 100)+ \"%\";\n\t\t\tthis.yLine.style.bottom = ((count / max_count) * 100)+ \"%\";\n\t\t},\n\n\t\tsetXMiddle (duration, max_duration){\n\t\t\tthis.xMiddleLabel.innerHTML = Math.ceil(duration /1000) + \" s\" ;\n\t\t\tthis.xMiddleLabel.style.left =(((duration / max_duration) * 100))+ \"%\";\n\t\t\tthis.xLine.style.left =(((duration / max_duration) * 100))+ \"%\";\n\t\t},\n\n\t\tanimateScatterPoint (p, s, max_duration, max_interactions){\n\t\t\tp.style.bottom = (((s.interactions / max_interactions) * 100))+ \"%\";\n\t\t\tp.style.left = (((s.duration / max_duration) * 100))+ \"%\";\n\t\t},\n\n\t\tgetNiceEventLabel (event, i, includeScreenForWidgets=true){\n\t\t\tif (this.model){\n\t\t\t\tconst screenName = this.getScreenName(event.screen, true)\n\t\t\t\tconst widgetName = this.getWidgetName(event.widget, true)\n\n\t\t\t\tvar row = [];\n\t\t\t\tif(event.widget){\n\t\t\t\t\tconst screenLabel = includeScreenForWidgets ? ' @ ' + screenName : ''\n\t\t\t\t\tif(event.type ==\"WidgetGesture\" && event.gesture){\n\t\t\t\t\t\tlet gesture = event.gesture;\n\t\t\t\t\t\trow = [this.getGestureLabel(gesture.type),  widgetName];\n\t\t\t\t\t} else if(event.state && (event.type == \"WidgetClick\" || event.type == \"WidgetChange\")  ){\n\n\t\t\t\t\t\treturn this.getEventStateLabel(event.state) + ` -  ` + widgetName +  screenLabel;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getEventLabel(event.type) + ` -  ` + widgetName + screenLabel;\n\t\t\t\t\t}\n\t\t\t\t} else if(event.type ==\"ScreenGesture\" && event.gesture){\n\t\t\t\t\tlet gesture = event.gesture;\n\t\t\t\t\trow = [\"Screen \" + this.getGestureLabel(gesture.type), screenName];\n\t\t\t\t}else {\n\t\t\t\t\trow = [this.getEventLabel(event.type), screenName];\n\t\t\t\t}\n\t\t\t\treturn row[0] + \" - \" +row[1]+ \"\";\n\t\t\t}\n\t\t\treturn this.getNLS(\"dash.perf.dropoff.step\") + i;\n\t\t}\n    },\n    mounted () {\n    }\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TaskPerfGram.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TaskPerfGram.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TaskPerfGram.vue?vue&type=template&id=78f68699\"\nimport script from \"./TaskPerfGram.vue?vue&type=script&lang=js\"\nexport * from \"./TaskPerfGram.vue?vue&type=script&lang=js\"\nimport style1 from \"./TaskPerfGram.vue?vue&type=style&index=1&id=78f68699&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"MatcTestSettings MatcDashTable\"},[_c('div',{attrs:{\"data-dojo-attach-point\":\"tableCntr\"}},[(_vm.hasTests)?_c('div',[_c('table',{staticClass:\"vommondTable table is-hoverable\"},[_vm._m(0),_c('tbody',_vm._l((_vm.testSettings.tasks),function(task,i){return _c('tr',{key:task.id},[_c('td',[_vm._v(_vm._s(task.name))]),_c('td',[_vm._v(_vm._s(_vm.shorten(task.description)))]),_c('td',[(task.flow && task.flow.length > 0)?[_c('div',{staticClass:\"StepCntr\"},_vm._l((_vm.getTaskSteps(task)),function(step,i){return _c('div',{key:i,class:'Step ' + step.type},[(i > 0)?_c('span',{staticClass:\"mdi mdi-arrow-right\"}):_vm._e(),_c('div',{staticClass:\"StepDetails\"},[_vm._v(_vm._s(_vm.shorten(step.label, 20))+\" \")])])}),0)]:_c('span',{staticClass:\"MatcHint\"},[_vm._v(\"No steps \")])],2),_c('td',{staticClass:\"action\"},[_c('div',{staticStyle:{\"width\":\"100px\",\"display\":\"flex\",\"justify-content\":\"flex-end\"}},[_c('a',{staticClass:\"MatcButton MatcButtonXXS MatcButtonSecondary\",on:{\"click\":function($event){return _vm.onEditTask(task, i, $event)}}},[_c('QIcon',{attrs:{\"icon\":\"EditSquare\"}})],1),_c('a',{staticClass:\"MatcButton MatcButtonXXS MatcButtonDanger MatcButtonSecondary\",on:{\"click\":function($event){return _vm.onDelete(task, i, $event)}}},[_c('QIcon',{attrs:{\"icon\":\"DeleteTrash\"}})],1)])])])}),0)]),_c('div',{staticClass:\"form-group mb-32\"},[_c('CheckBox',{attrs:{\"value\":_vm.test.showTaskInTest,\"label\":_vm.getNLS('testSettingsShowTaskInTest')},on:{\"change\":_vm.onShowTaskChange}})],1),(_vm.test.showTaskInTest)?_c('div',{staticClass:\"form-group\"},[_c('CheckBox',{attrs:{\"value\":_vm.test.showSuccessInTest,\"label\":_vm.getNLS('testSettingsShowSuccessInTest')},on:{\"change\":_vm.onShowSuccessInTest}})],1):_vm._e()]):_c('p',{staticClass:\"mb-32\"},[_vm._v(\" \"+_vm._s(_vm.getNLS(\"testSettingsTaskAddHint\"))+\" \")])]),_c('a',{staticClass:\"MatcButton MatcButtonXXS\",attrs:{\"data-nls\":\"testSettingsAddTask\"},on:{\"click\":_vm.showCreateDialog}},[_vm._v(\"Add task\")])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('tr',[_c('td',{staticStyle:{\"width\":\"20%\"}},[_vm._v(\"Name\")]),_c('td',{staticStyle:{\"width\":\"30%\"}},[_vm._v(\"Description\")]),_c('td',{staticStyle:{\"width\":\"35%\"}},[_vm._v(\"Steps\")]),_c('td',{staticClass:\"action\",staticStyle:{\"width\":\"15%\"}},[_vm._v(\"Action\")])])])\n}]\n\nexport { render, staticRenderFns }","\n<template>\n    <div class=\"MatcTestSettings MatcDashTable\">\n\n        <div data-dojo-attach-point=\"tableCntr\" class=\"\">\n          <div v-if=\"hasTests\" >\n          <table class=\"vommondTable table is-hoverable\">\n            <thead>\n                <tr>\n                  <td style=\"width: 20%;\">Name</td>\n                  <td style=\"width: 30%;\">Description</td>\n                  <td style=\"width: 35%;\">Steps</td>\n                  <td style=\"width: 15%;\" class=\"action\">Action</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(task, i) in testSettings.tasks\" :key=\"task.id\">\n                  <td >{{task.name}}</td>\n                  <td>{{shorten(task.description)}}</td>\n                  <td>\n                    <template v-if=\"task.flow && task.flow.length > 0\">\n                      <div class=\"StepCntr\">\n                          <div v-for=\"(step, i) in getTaskSteps(task)\" :key=\"i\" :class=\"'Step ' + step.type\">\n                            <span class=\"mdi mdi-arrow-right\" v-if=\"i > 0\"/>\n                            <div class=\"StepDetails\">{{shorten(step.label, 20)}}  </div>\n                         </div>\n                      </div>\n\n\n                    </template>\n                    <span class=\"MatcHint\" v-else>No steps </span>\n                  </td>\n                  <td class=\" action\">\n                    <div style=\"width: 100px; display: flex; justify-content: flex-end;\">\n                    <a class=\"MatcButton MatcButtonXXS MatcButtonSecondary\" @click=\"onEditTask(task, i, $event)\"><QIcon icon=\"EditSquare\"/></a>\n                    <a class=\"MatcButton MatcButtonXXS MatcButtonDanger MatcButtonSecondary\" @click=\"onDelete(task, i, $event)\"><QIcon icon=\"DeleteTrash\"/></a>\n                    </div>\n                  </td>\n                </tr>\n            </tbody>\n          </table>\n          <div class=\"form-group mb-32\">\n            <CheckBox :value=\"test.showTaskInTest\" :label=\"getNLS('testSettingsShowTaskInTest')\" @change=\"onShowTaskChange\"/>\n              </div>\n\n          <div class=\"form-group\" v-if=\"test.showTaskInTest\" >\n            <CheckBox :value=\"test.showSuccessInTest\" :label=\"getNLS('testSettingsShowSuccessInTest')\" @change=\"onShowSuccessInTest\"/>\n          </div>\n\n          </div>\n          <p v-else class=\"mb-32\">\n            {{getNLS(\"testSettingsTaskAddHint\")}}\n          </p>\n        </div>\n\n        <a data-nls=\"testSettingsAddTask\" @click=\"showCreateDialog\" class=\"MatcButton MatcButtonXXS\">Add task</a>\n\n\n  </div>\n</template>\n<style lang=\"scss\">\n  @import '../../../style/components/task_create_dialog.scss';\n</style>\n<script>\nimport DojoWidget from \"dojo/DojoWidget\";\nimport css from \"dojo/css\";\nimport lang from \"dojo/_base/lang\";\nimport on from \"dojo/on\";\nimport touch from \"dojo/touch\";\nimport Logger from \"common/Logger\";\nimport Dialog from \"common/Dialog\";\nimport DomBuilder from \"common/DomBuilder\";\nimport CheckBox from \"common/CheckBox\";\nimport Util from \"core/Util\";\nimport Plan from \"page/Plan\";\nimport QIcon from \"page/QIcon\";\nimport Services from \"services/Services\";\nimport TaskRecorder from \"views/apps/analytics/TaskCreateDialog\";\n\n\nexport default {\n  name: \"TestSettings\",\n  props: [\"test\", \"app\", \"annotation\", \"events\", \"hash\"],\n  mixins: [Util, Plan, DojoWidget],\n  data: function() {\n    return {\n      testSettings: null,\n      appID: \"\",\n      userID: \"\"\n    };\n  },\n  components: {\n    'CheckBox': CheckBox,\n    'QIcon':QIcon\n  },\n  computed: {\n    pub() {\n      return this.$route.meta && this.$route.meta.isPublic;\n    },\n    hasTests () {\n      return this.testSettings && this.testSettings.tasks && this.testSettings.tasks.length > 0\n    }\n  },\n  methods: {\n\n    shorten (s, max = 70) {\n      if (s && s.length > max) {\n        return s.substring(0, max) + '...'\n      }\n      return s\n    },\n\n    getTaskSteps (task) {\n      let result = []\n      if (task.flow.length > 0) {\n        result.push(this.createStep(task.flow[0]))\n      }\n\n      if (task.flow.length > 2) {\n        result.push({\n          type: '',\n          label: '...'\n        })\n      }\n\n      if (task.flow.length > 1) {\n        result.push(this.createStep(task.flow[task.flow.length-1]))\n      }\n\n      return result\n    },\n\n    createStep (event) {\n      return {\n        label: (event.widget ? this.getWidgetName(event.widget) : this.getScreenName(event.screen)),\n        type: event.widget ? 'widget' : 'screen'\n      }\n    },\n\n\n\n    getScreenName (screenID) {\n      if (this.app.screens[screenID] && this.app.screens[screenID].name) {\n        return this.app.screens[screenID].name;\n      }\n      return screenID;\n    },\n\n    getWidgetName (widgetID) {\n      if (this.app.widgets[widgetID] && this.app.widgets[widgetID].name) {\n        return this.app.widgets[widgetID].name;\n      }\n      return widgetID;\n    },\n\n    postCreate() {\n      this.logger = new Logger(\"TestSettings\");\n      this.logger.log(4,\"postCreate\", \"enter > \" + this.appID + \" > \" + this.pub);\n      this.db = new DomBuilder();\n      if (this.test) {\n        this.setValue(this.test);\n      }\n    },\n\n    setValue(data) {\n      this.testSettings = data\n    },\n\n    render(data) {\n      this.cleanUpTempListener();\n      this.renderTaskTable(data);\n    },\n\n    onShowTaskChange (value) {\n      this.test.showTaskInTest = value\n      this.save();\n    },\n\n    onShowSuccessInTest (value) {\n      this.test.showSuccessInTest = value\n      this.save();\n    },\n\n    showCreateDialog () {\n      var d = new Dialog();\n      var dialog = document.createElement(\"div\");\n      css.add(dialog, \"MatchTaskRecorderDialog\");\n      var s = this.$new(TaskRecorder, { model: this.app, hash: this.hash });\n      s.setValue({\n        name: \"Task \" + (this.test.tasks.length + 1),\n        description: '',\n        flow: [],\n        strict: false\n      })\n      s.placeAt(dialog);\n      d.popup(dialog, this.addBTN);\n      d.own(on(d, \"close\", function() { s.destroy(); }));\n      d.own(on(s, \"close\", function() { d.close(); }));\n      d.own(on(s, \"save\", lang.hitch(this, \"createNewTask\", s, d)));\n    },\n\n    async createNewTask(s, dialog) {\n      let newTask = s.getValue()\n      dialog.close()\n      if (!this.test.tasks) {\n        this.test.tasks = [];\n      }\n      this.test.tasks.push({\n        name: newTask.name,\n        description: newTask.description,\n        id: \"t\" + Date.now(),\n        strict: newTask.strict,\n        flow: newTask.flow\n      });\n\n\n      this.save();\n    },\n\n    onEditTask(task, i, e) {\n      var d = new Dialog();\n      var dialog = document.createElement(\"div\");\n      css.add(dialog, \"MatchTaskRecorderDialog\");\n      var s = this.$new(TaskRecorder, { model: this.app, hash: this.hash, ignoreFirstEvent: true});\n      s.setValue(task)\n      s.placeAt(dialog);\n      d.popup(dialog, e.target);\n      d.own(on(d, \"close\", function() { s.destroy(); }));\n      d.own(on(s, \"close\", function() { d.close(); }));\n      d.own(on(s, \"save\", lang.hitch(this, \"updateTask\", s, d)));\n    },\n\n    updateTask(s, dialog) {\n      let updatedTask = s.getValue()\n      let task = this.test.tasks.find(t => t.id === updatedTask.id);\n      if (task) {\n        task.name = updatedTask.name\n        task.strict = updatedTask.strict\n        task.flow = updatedTask.flow\n        task.description = updatedTask.description\n\n        this.save();\n      } else {\n        console.error(\"AnalyticTaskList.saveFlow() > Cannot find task\", updatedTask);\n      }\n      dialog.close();\n    },\n\n\n\n    onDelete (task, i, e) {\n      var name = task.name ? task.name : task.label;\n      var div = this.db.div(\"MatcDeleteDialog\").build();\n      this.db.h3(\"title is-4\", this.getNLS(\"testSettingTaskDeleteTitle\")).build(div);\n      this.db.p('MatcMarginBottomXL', this.getNLS(\"testSettingTaskDelete1\") + name + this.getNLS(\"testSettingTaskDelete2\")).build(div)\n      var bar = this.db.div(\"MatcButtonBar\").build(div);\n      var write = this.db.a(\"MatcButton MatcButtonDanger\", this.getNLS(\"btn.delete\")).build(bar);\n      var cancel = this.db.a(\"MatcLinkButton\", this.getNLS(\"btn.cancel\")).build(bar);\n      var d = new Dialog();\n      d.own(on(write, touch.press, lang.hitch(this, \"removeTask\", i, d)));\n      d.own(on(cancel, touch.press, lang.hitch(d, \"close\")));\n      d.popup(div, e.target);\n    },\n\n    removeTask (i, d) {\n      this.test.tasks.splice(i, 1);\n      d.close();\n      this.save();\n    },\n\n    async save() {\n      if (this.pub) {\n        this.showSuccess(this.getNLS(\"testSettingsRegister\"));\n      } else {\n        let res = await Services.getModelService().saveTestSettings(\n          this.app.id,\n          this.test\n        );\n        if (res.status === \"ok\") {\n          this.showSuccess(\"Saved..\");\n          this.$emit(\"change\", this.test);\n        }\n      }\n    },\n\n     _onEditFlow(task, i, node) {\n      var tasks = this.test.tasks;\n      for (let j = 0; j < tasks.length; j++) {\n        var t = tasks[j];\n        if (t.id == task.id) {\n          this.onFlow(node, t, j);\n        }\n      }\n    },\n\n    onFlow(node, task) {\n      this.showTaskFlow(node, task, this.app);\n    },\n\n\n    cleanUp() {\n      this.cleanUpTempListener();\n    }\n  },\n  watch: {\n    test(v) {\n      console.debug(\"TestSetting.watch() > test\", v);\n      this.test = v;\n      this.setValue(v);\n    }\n  },\n  mounted() {}\n};\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TestSettings.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TestSettings.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TestSettings.vue?vue&type=template&id=cd11507a\"\nimport script from \"./TestSettings.vue?vue&type=script&lang=js\"\nexport * from \"./TestSettings.vue?vue&type=script&lang=js\"\nimport style0 from \"./TestSettings.vue?vue&type=style&index=0&id=cd11507a&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","class","hasToolbar","on","open","attrs","newNotifications","staticClass","_v","_s","_e","staticRenderFns","name","mixins","DojoWidget","props","data","components","QIcon","methods","show","topic","subtopic","_this","dialog","Dialog","db","DomBuilder","popup","div","build","$el","setTimeout","help","$new","Help","hasNotifications","placeAt","setTopic","setSupTopic","_this2","Services","getUserService","setLastNotication","initNotification","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","lastNoticationView","notifications","i","notification","wrap","_context","prev","next","getLastNotication","sent","lastNotification","getNotications","length","lastUpdate","stop","mounted","component","ref","icon","_m","DropDownButton","openCSS","iconCSS","labelCSS","selectedCSS","liCSS","updateLabel","selected","renderOptions","list","o","li","document","createElement","css","add","check","checkCntr","appendChild","CheckBox","setValue","setLabel","label","lang","hitch","_lis","value","hasObjects","lbl","innerHTML","own","touch","press","ul","onSelect","option","callback","$emit","onClick","e","event","watch","$t","hasConfig","onChangeNorm","clusterAlgo","clusterAlgoOptions","onChangeAlgo","clusterOptions","onChangeCluster","events","viewMode","yAxis","xAxis","app","pub","clusterVars","clusterNorm","annotation","test","mode","onBackgroundClick","hasOutliers","$event","toggleOutlier","style","getOutlierStyle","getNLS","hoverDetails","cls","y","x","Math","round","s","duration","interactions","screenUnique","screenLoads","weirdness","_l","tasks","t","key","_Color","Util","selectedTasks","paddingFactor","includeDropOff","defaultColor","outlierColor","clusters","colors","bins","ScatterPlotDetails","concat","getTaskStyle","task","id","color","postCreate","init","_scatterPoints","annotations","logger","log","PerformanceMonitor","start","model","filteredEvents","filterEvents","df","getActionEvents","DataFrame","sortBy","clone","filter","flow","sessionDetails","analytics","getSessionDetails","Outlier","convertSessionDetails","error","sendError","end","clickTask","selectTask","$forceUpdate","cleanUpTempListener","render_Scatter","setHint","span","unSelectPoint","_selectedScatterPoint","xLabel","yLabel","minLabel","yMinLabel","render_Scatter_Points","sessionSummaryDF","maxXAxis","max","ceil","maxYAxis","meanXAxis","mean","meanYAxis","xMaxLabel","yMaxLabel","sessions","renderScatterPoint","session","ms","min","p","canvas","bottom","left","getPointColor","background","tempOwn","animateScatterPoint","taskID","success","taskColors","hoverPoint","posX","posY","forEach","_s$t$id","push","leavePoint","selectPoint","stopEvent","setXMiddle","setYMiddle","cntr","showSessionReplayHint","url","hint","a","href","target","hintNode","hintCntr","iconDOM","clearPoint","remove","setMiddle","count","yMiddleLabel","yLine","xMiddleLabel","xLine","v","Analytics","Logger","hasOutlier","isLoaded","scatterMode","viewOptions","selection","cols","HelpButton","DropDownSelect","ScatterPlot","computed","d","Object","keys","setScatterMode","m","parts","split","setViewMode","showSelection","type","directives","rawName","expression","domProps","composing","$set","description","steps","step","removeEvent","strict","setStrict","recordOnlyScreenViews","setRecordOnlyScreenView","abScreens","box","selectABLine","onSave","onCancel","hash","ignoreFirstEvent","ignoredEvents","map","screen","getScreenName","widget","getWidgetName","getEventLabelWithState","state","getEventLabel","getEventStateLabel","appID","createSimulator","wrapper","$refs","pos","resizeSimulatorContainer","simCntr","width","w","height","h","simulator","Simulator","isDesktopTest","logData","setHash","scrollListenTarget","startup","abSelector","lines","showABDialog","setModel","_this4","abCallback","abLines","line","to","screens","widgets","selectedLine","find","l","node","domGeom","position","screenSize","getScaledSize","onEvent","indexOf","splice","emit","sort","b","time","getValue","cleanUp","hasTaskSelector","onChangeFunnelDropOff","x_prefix","tab","tabs","smoothLineFunction","d3","curve","straightLineFunction","canvasPos","addTab","tabsCntr","setTab","lastTab","renderTasks","taskDivs","taskCircles","taskCntr","circle","changeTask","renderTab","h2","domNode","clean_funnelDurartion","render_funnelDurartion","clean_funnelInteraction","render_funnelInteraction","yLabelEast","bottom25Label","bottom75Label","yMinLabelEast","offset","stepWidth","canvasHeight","stepData","getFunnelInteraction","maxIteration","getFunnelMax","_render_funnel_steps","_render_funnel_lines","reset_funnel_selection","_stepDivs","parentNode","removeChild","funnelSVG","xAxisLabelCntr","getFunnelDuration","maxDuration","selectFunnelPoint","maxValue","lblFunction","svgCntr","append","attr","lineSVGs","lineColor","linePoints","_render_funnel_session_line","curveOffset","dropoff","point","top","svg","values","getStepData","stepDF","std","render_funnel_box_plot","getNiceEventLabel","parent","total","bar","centre","undefined","_this5","_loop","render_details","perf","getTaskPerformance","max_duration","max_count","selectCount","taskDF","select","yMaxLabelEast","slots","createBoxPlot","_bars","prefix","widthUnit","arguments","animateBoxplot","clean_details","removeBoxplots","render_scatter","mean_duration","mean_count","maxDelay","opacity","max_interactions","fadeOutPoint","clean_scatter","sessionID","removePoints","render_dropoff","_barLabels","funnel","getFunnelSummary","summary","greenToRed","animateBar","clean_dropoff","removeBars","showSessionReplay","close","location","includeScreenForWidgets","screenName","widgetName","row","screenLabel","gesture","getGestureLabel","hasTests","testSettings","shorten","getTaskSteps","staticStyle","onEditTask","onDelete","showTaskInTest","onShowTaskChange","showSuccessInTest","onShowSuccessInTest","showCreateDialog","Plan","userID","$route","meta","isPublic","substring","createStep","screenID","widgetID","renderTaskTable","save","TaskRecorder","addBTN","destroy","createNewTask","newTask","Date","now","updateTask","updatedTask","console","h3","write","cancel","removeTask","_callee2","res","_context2","showSuccess","getModelService","saveTestSettings","status","_onEditFlow","j","onFlow","showTaskFlow","debug"],"sourceRoot":""}